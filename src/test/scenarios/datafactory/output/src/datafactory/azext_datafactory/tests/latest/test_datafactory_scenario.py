# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from .example_steps import step__factories_put_factories_createorupdate
from .example_steps import step__factories_get_factories_get
from .example_steps import step__factories_get_factories_list
from .example_steps import step__factories_get_factories_listbyresourcegroup
from .example_steps import step__factories_patch_factories_update
from .example_steps import step__factories_post
from .example_steps import step__factories_post_factories_getdataplaneaccess
from .example_steps import step__factories_post2
from .example_steps import step__integrationruntimes_put
from .example_steps import step__integrationruntimes_get
from .example_steps import step__integrationruntimes_get2
from .example_steps import step__integrationruntimes_patch
from .example_steps import step__integrationruntimes_post
from .example_steps import step__integrationruntimes_post2
from .example_steps import step__integrationruntimes_post3
from .example_steps import step__integrationruntimes_post4
from .example_steps import step__integrationruntimes_post5
from .example_steps import step__integrationruntimes_post6
from .example_steps import step__integrationruntimes_post7
from .example_steps import step__integrationruntimes_post8
from .example_steps import step__integrationruntimes_post9
from .example_steps import step__integrationruntimes_post10
from .example_steps import step__integrationruntimes_post11
from .example_steps import step__integrationruntimes_delete
from .example_steps import step__triggers_put_triggers_create
from .example_steps import step__triggers_put_triggers_update
from .example_steps import step__triggers_get_triggers_get
from .example_steps import step__triggers_get_triggers_listbyfactory
from .example_steps import step__triggers_post
from .example_steps import step__triggers_post_triggers_querybyfactory
from .example_steps import step__triggers_post_triggers_start
from .example_steps import step__triggers_post_triggers_stop
from .example_steps import step__triggers_post_triggers_subscribetoevents
from .example_steps import step__triggers_post_triggers_unsubscribefromevents
from .example_steps import step__triggers_delete_triggers_delete
from .example_steps import step__factories_delete_factories_delete
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test, rg):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test, rg):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test, rg):
    setup_scenario(test, rg)
    step__factories_put_factories_createorupdate(test, rg, checks=[])
    step__factories_get_factories_get(test, rg, checks=[])
    step__factories_get_factories_list(test, rg, checks=[])
    step__factories_get_factories_listbyresourcegroup(test, rg, checks=[])
    step__factories_patch_factories_update(test, rg, checks=[])
    step__factories_post(test, rg, checks=[])
    step__factories_post_factories_getdataplaneaccess(test, rg, checks=[])
    step__factories_post2(test, rg, checks=[])
    step__integrationruntimes_put(test, rg, checks=[])
    step__integrationruntimes_get(test, rg, checks=[])
    step__integrationruntimes_get2(test, rg, checks=[])
    step__integrationruntimes_patch(test, rg, checks=[])
    step__integrationruntimes_post(test, rg, checks=[])
    step__integrationruntimes_post2(test, rg, checks=[])
    step__integrationruntimes_post3(test, rg, checks=[])
    step__integrationruntimes_post4(test, rg, checks=[])
    step__integrationruntimes_post5(test, rg, checks=[])
    step__integrationruntimes_post6(test, rg, checks=[])
    step__integrationruntimes_post7(test, rg, checks=[])
    step__integrationruntimes_post8(test, rg, checks=[])
    step__integrationruntimes_post9(test, rg, checks=[])
    step__integrationruntimes_post10(test, rg, checks=[])
    step__integrationruntimes_post11(test, rg, checks=[])
    step__integrationruntimes_delete(test, rg, checks=[])
    step__triggers_put_triggers_create(test, rg, checks=[])
    step__triggers_put_triggers_update(test, rg, checks=[])
    step__triggers_get_triggers_get(test, rg, checks=[])
    step__triggers_get_triggers_listbyfactory(test, rg, checks=[])
    step__triggers_post(test, rg, checks=[])
    step__triggers_post_triggers_querybyfactory(test, rg, checks=[])
    step__triggers_post_triggers_start(test, rg, checks=[])
    step__triggers_post_triggers_stop(test, rg, checks=[])
    step__triggers_post_triggers_subscribetoevents(test, rg, checks=[])
    step__triggers_post_triggers_unsubscribefromevents(test, rg, checks=[])
    step__triggers_delete_triggers_delete(test, rg, checks=[])
    step__factories_delete_factories_delete(test, rg, checks=[])
    cleanup_scenario(test, rg)


@try_manual
class DatafactoryScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitestdatafactory_exampleResourceGroup'[:7], key='rg', parameter_name='rg')
    def test_datafactory(self, rg):

        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'myFactory': 'exampleFactoryName',
            'myTrigger': 'exampleTrigger',
            'myIntegrationRuntime': 'exampleIntegrationRuntime',
            'myIntegrationRuntime2': 'exampleManagedIntegrationRuntime',
        })

        call_scenario(self, rg)
        calc_coverage(__file__)
        raise_if()

