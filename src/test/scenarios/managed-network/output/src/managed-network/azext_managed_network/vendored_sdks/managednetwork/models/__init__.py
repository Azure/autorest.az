# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

try:
    from ._models_py3 import ErrorResponse
    from ._models_py3 import HubAndSpokePeeringPolicyProperties
    from ._models_py3 import ManagedNetwork
    from ._models_py3 import ManagedNetworkGroup
    from ._models_py3 import ManagedNetworkGroupListResult
    from ._models_py3 import ManagedNetworkGroupProperties
    from ._models_py3 import ManagedNetworkListResult
    from ._models_py3 import ManagedNetworkPeeringPolicy
    from ._models_py3 import ManagedNetworkPeeringPolicyListResult
    from ._models_py3 import ManagedNetworkPeeringPolicyProperties
    from ._models_py3 import ManagedNetworkProperties
    from ._models_py3 import ManagedNetworkUpdate
    from ._models_py3 import MeshPeeringPolicyProperties
    from ._models_py3 import Operation
    from ._models_py3 import OperationDisplay
    from ._models_py3 import OperationListResult
    from ._models_py3 import ProxyResource
    from ._models_py3 import Resource
    from ._models_py3 import ResourceId
    from ._models_py3 import ResourceProperties
    from ._models_py3 import ScopeAssignment
    from ._models_py3 import ScopeAssignmentListResult
    from ._models_py3 import ScopeAssignmentProperties
    from ._models_py3 import TrackedResource
except (SyntaxError, ImportError):
    from ._models import ErrorResponse  # type: ignore
    from ._models import HubAndSpokePeeringPolicyProperties  # type: ignore
    from ._models import ManagedNetwork  # type: ignore
    from ._models import ManagedNetworkGroup  # type: ignore
    from ._models import ManagedNetworkGroupListResult  # type: ignore
    from ._models import ManagedNetworkGroupProperties  # type: ignore
    from ._models import ManagedNetworkListResult  # type: ignore
    from ._models import ManagedNetworkPeeringPolicy  # type: ignore
    from ._models import ManagedNetworkPeeringPolicyListResult  # type: ignore
    from ._models import ManagedNetworkPeeringPolicyProperties  # type: ignore
    from ._models import ManagedNetworkProperties  # type: ignore
    from ._models import ManagedNetworkUpdate  # type: ignore
    from ._models import MeshPeeringPolicyProperties  # type: ignore
    from ._models import Operation  # type: ignore
    from ._models import OperationDisplay  # type: ignore
    from ._models import OperationListResult  # type: ignore
    from ._models import ProxyResource  # type: ignore
    from ._models import Resource  # type: ignore
    from ._models import ResourceId  # type: ignore
    from ._models import ResourceProperties  # type: ignore
    from ._models import ScopeAssignment  # type: ignore
    from ._models import ScopeAssignmentListResult  # type: ignore
    from ._models import ScopeAssignmentProperties  # type: ignore
    from ._models import TrackedResource  # type: ignore

from ._managed_network_management_client_enums import (
    Kind,
    ProvisioningState,
    Type,
)

__all__ = [
    'ErrorResponse',
    'HubAndSpokePeeringPolicyProperties',
    'ManagedNetwork',
    'ManagedNetworkGroup',
    'ManagedNetworkGroupListResult',
    'ManagedNetworkGroupProperties',
    'ManagedNetworkListResult',
    'ManagedNetworkPeeringPolicy',
    'ManagedNetworkPeeringPolicyListResult',
    'ManagedNetworkPeeringPolicyProperties',
    'ManagedNetworkProperties',
    'ManagedNetworkUpdate',
    'MeshPeeringPolicyProperties',
    'Operation',
    'OperationDisplay',
    'OperationListResult',
    'ProxyResource',
    'Resource',
    'ResourceId',
    'ResourceProperties',
    'ScopeAssignment',
    'ScopeAssignmentListResult',
    'ScopeAssignmentProperties',
    'TrackedResource',
    'Kind',
    'ProvisioningState',
    'Type',
]
