# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /RemoteRenderingAccounts/put/Create remote rendering account
@try_manual
def step_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az remote-rendering-account create '
             '--account-name "MyAccount" '
             '--location "eastus2euap" '
             '--resource-group "{rg}"',
             checks=checks)


@try_manual
def step_create_min(test, rg, checks=None):
    return step_create(test, rg, checks)


# EXAMPLE: /RemoteRenderingAccounts/get/Get remote rendering account
@try_manual
def step_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az remote-rendering-account show '
             '--account-name "MyAccount" '
             '--resource-group "{rg}"',
             checks=checks)


@try_manual
def step_show_min(test, rg, checks=None):
    return step_show(test, rg, checks)


# EXAMPLE: /RemoteRenderingAccounts/get/List remote rendering accounts by resource group
@try_manual
def step_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az remote-rendering-account list '
             '--resource-group "{rg}"',
             checks=checks)


@try_manual
def step_list_min(test, rg, checks=None):
    return step_list(test, rg, checks)


# EXAMPLE: /RemoteRenderingAccounts/get/List remote rendering accounts by subscription
@try_manual
def step_list2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az remote-rendering-account list '
             '-g ""',
             checks=checks)


@try_manual
def step_list2_min(test, rg, checks=None):
    return step_list2(test, rg, checks)


# EXAMPLE: /RemoteRenderingAccounts/patch/Update remote rendering account
@try_manual
def step_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az remote-rendering-account update '
             '--account-name "MyAccount" '
             '--location "eastus2euap" '
             '--tags hero="romeo" heroine="juliet" '
             '--resource-group "{rg}"',
             checks=checks)


@try_manual
def step_update_min(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az remote-rendering-account update '
             '--account-name "MyAccount" '
             '--location "eastus2euap" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /RemoteRenderingAccounts/post/List remote rendering account key
@try_manual
def step_list_key(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az remote-rendering-account list-key '
             '--account-name "MyAccount" '
             '--resource-group "{rg}"',
             checks=checks)


@try_manual
def step_list_key_min(test, rg, checks=None):
    return step_list_key(test, rg, checks)


# EXAMPLE: /RemoteRenderingAccounts/post/Regenerate remote rendering account keys
@try_manual
def step_regenerate_key(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az remote-rendering-account regenerate-key '
             '--account-name "MyAccount" '
             '--serial 1 '
             '--resource-group "{rg}"',
             checks=checks)


@try_manual
def step_regenerate_key_min(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az remote-rendering-account regenerate-key '
             '--account-name "MyAccount" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /RemoteRenderingAccounts/delete/Delete remote rendering account
@try_manual
def step_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az remote-rendering-account delete -y '
             '--account-name "MyAccount" '
             '--resource-group "{rg}"',
             checks=checks)


@try_manual
def step_delete_min(test, rg, checks=None):
    return step_delete(test, rg, checks)


# EXAMPLE: /SpatialAnchorsAccounts/post/Regenerate spatial anchors account keys
@try_manual
def step_regenerate_key2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az spatial-anchors-account regenerate-key '
             '--account-name "MyAccount" '
             '--serial 1 '
             '--resource-group "{rg}"',
             checks=checks)


@try_manual
def step_regenerate_key2_min(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az spatial-anchors-account regenerate-key '
             '--account-name "MyAccount" '
             '--resource-group "{rg}"',
             checks=checks)

