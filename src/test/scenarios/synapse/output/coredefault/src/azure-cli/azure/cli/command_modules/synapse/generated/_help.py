# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['synapse big-data-pool'] = """
    type: group
    short-summary: synapse big-data-pool
"""

helps['synapse big-data-pool list'] = """
    type: command
    short-summary: "List Big Data pools in a workspace."
    examples:
      - name: List Big Data pools in a workspace
        text: |-
               az synapse big-data-pool list --resource-group "ExampleResourceGroup" --workspace-name \
"ExampleWorkspace"
"""

helps['synapse big-data-pool show'] = """
    type: command
    short-summary: "Get a Big Data pool."
    examples:
      - name: Get a Big Data pool
        text: |-
               az synapse big-data-pool show --name "ExamplePool" --resource-group "ExampleResourceGroup" \
--workspace-name "ExampleWorkspace"
"""

helps['synapse big-data-pool create'] = """
    type: command
    short-summary: "Create a new Big Data pool."
    parameters:
      - name: --auto-scale
        short-summary: "Auto-scaling properties"
        long-summary: |
            Usage: --auto-scale min-node-count=XX enabled=XX max-node-count=XX

            min-node-count: The minimum number of nodes the Big Data pool can support.
            enabled: Whether automatic scaling is enabled for the Big Data pool.
            max-node-count: The maximum number of nodes the Big Data pool can support.
      - name: --auto-pause
        short-summary: "Auto-pausing properties"
        long-summary: |
            Usage: --auto-pause delay-in-minutes=XX enabled=XX

            delay-in-minutes: Number of minutes of idle time before the Big Data pool is automatically paused.
            enabled: Whether auto-pausing is enabled for the Big Data pool.
      - name: --library-requirements
        short-summary: "Library version requirements"
        long-summary: |
            Usage: --library-requirements content=XX filename=XX

            content: The library requirements.
            filename: The filename of the library requirements file.
    examples:
      - name: Create or update a Big Data pool
        text: |-
               az synapse big-data-pool create --location "West US 2" --auto-pause delay-in-minutes=15 enabled=true \
--auto-scale enabled=true max-node-count=50 min-node-count=3 --default-spark-log-folder "/logs" --library-requirements \
content="" filename="requirements.txt" --node-count 4 --node-size "Medium" --node-size-family "MemoryOptimized" \
--spark-events-folder "/events" --spark-version "2.4" --tags key="value" --name "ExamplePool" --resource-group \
"ExampleResourceGroup" --workspace-name "ExampleWorkspace"
"""

helps['synapse big-data-pool update'] = """
    type: command
    short-summary: "Patch a Big Data pool."
    examples:
      - name: Update a Big Data pool
        text: |-
               az synapse big-data-pool update --name "ExamplePool" --tags key="value" --resource-group \
"ExampleResourceGroup" --workspace-name "ExampleWorkspace"
"""

helps['synapse big-data-pool delete'] = """
    type: command
    short-summary: "Delete a Big Data pool from the workspace."
    examples:
      - name: Delete a Big Data pool
        text: |-
               az synapse big-data-pool delete --name "ExamplePool" --resource-group "ExampleResourceGroup" \
--workspace-name "ExampleWorkspace"
"""

helps['synapse big-data-pool wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the synapse big-data-pool is met.
    examples:
      - name: Pause executing next line of CLI script until the synapse big-data-pool is successfully created.
        text: |-
               az synapse big-data-pool wait --name "ExamplePool" --resource-group "ExampleResourceGroup" \
--workspace-name "ExampleWorkspace" --created
      - name: Pause executing next line of CLI script until the synapse big-data-pool is successfully deleted.
        text: |-
               az synapse big-data-pool wait --name "ExamplePool" --resource-group "ExampleResourceGroup" \
--workspace-name "ExampleWorkspace" --deleted
"""

helps['synapse operation'] = """
    type: group
    short-summary: synapse operation
"""

helps['synapse operation get-azure-async-header-result'] = """
    type: command
    short-summary: "Get the status of an operation"
    examples:
      - name: Get azure async operation header result
        text: |-
               az synapse operation get-azure-async-header-result --operation-id "01234567-89ab-4def-0123-456789abcdef"\
 --resource-group "resourceGroup1" --workspace-name "workspace1"
"""

helps['synapse operation get-location-header-result'] = """
    type: command
    short-summary: "Get the result of an operation"
    examples:
      - name: Get location header result
        text: |-
               az synapse operation get-location-header-result --operation-id "01234567-89ab-4def-0123-456789abcdef" \
--resource-group "resourceGroup1" --workspace-name "workspace1"
"""

helps['synapse ip-firewall-rule'] = """
    type: group
    short-summary: synapse ip-firewall-rule
"""

helps['synapse ip-firewall-rule list'] = """
    type: command
    short-summary: "Returns a list of firewall rules"
    examples:
      - name: List IP firewall rules in a workspace
        text: |-
               az synapse ip-firewall-rule list --resource-group "ExampleResourceGroup" --workspace-name \
"ExampleWorkspace"
"""

helps['synapse ip-firewall-rule show'] = """
    type: command
    short-summary: "Get a firewall rule"
    examples:
      - name: Create an IP firewall rule
        text: |-
               az synapse ip-firewall-rule show --resource-group "ExampleResourceGroup" --rule-name \
"ExampleIpFirewallRule" --workspace-name "ExampleWorkspace"
"""

helps['synapse ip-firewall-rule create'] = """
    type: command
    short-summary: "Creates or updates a firewall rule"
    examples:
      - name: Create an IP firewall rule
        text: |-
               az synapse ip-firewall-rule create --end-ip-address "10.0.0.254" --start-ip-address "10.0.0.0" \
--resource-group "ExampleResourceGroup" --rule-name "ExampleIpFirewallRule" --workspace-name "ExampleWorkspace"
"""

helps['synapse ip-firewall-rule update'] = """
    type: command
    short-summary: "Creates or updates a firewall rule"
"""

helps['synapse ip-firewall-rule delete'] = """
    type: command
    short-summary: "Deletes a firewall rule"
    examples:
      - name: Delete an IP firewall rule from a workspace
        text: |-
               az synapse ip-firewall-rule delete --resource-group "ExampleResourceGroup" --rule-name \
"ExampleIpFirewallRule" --workspace-name "ExampleWorkspace"
"""

helps['synapse ip-firewall-rule replace-all'] = """
    type: command
    short-summary: "Replaces firewall rules"
    examples:
      - name: Replace all IP firewall rules in a workspace
        text: |-
               az synapse ip-firewall-rule replace-all --resource-group "ExampleResourceGroup" --workspace-name \
"ExampleWorkspace" --ip-firewall-rules "{\\"AnotherExampleFirewallRule\\":{\\"endIpAddress\\":\\"10.0.1.254\\",\\"start\
IpAddress\\":\\"10.0.1.0\\"},\\"ExampleFirewallRule\\":{\\"endIpAddress\\":\\"10.0.0.254\\",\\"startIpAddress\\":\\"10.\
0.0.0\\"}}"
"""

helps['synapse ip-firewall-rule wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the synapse ip-firewall-rule is met.
    examples:
      - name: Pause executing next line of CLI script until the synapse ip-firewall-rule is successfully created.
        text: |-
               az synapse ip-firewall-rule wait --resource-group "ExampleResourceGroup" --rule-name \
"ExampleIpFirewallRule" --workspace-name "ExampleWorkspace" --created
      - name: Pause executing next line of CLI script until the synapse ip-firewall-rule is successfully updated.
        text: |-
               az synapse ip-firewall-rule wait --resource-group "ExampleResourceGroup" --rule-name \
"ExampleIpFirewallRule" --workspace-name "ExampleWorkspace" --updated
      - name: Pause executing next line of CLI script until the synapse ip-firewall-rule is successfully deleted.
        text: |-
               az synapse ip-firewall-rule wait --resource-group "ExampleResourceGroup" --rule-name \
"ExampleIpFirewallRule" --workspace-name "ExampleWorkspace" --deleted
"""

helps['synapse sql-pool'] = """
    type: group
    short-summary: synapse sql-pool
"""

helps['synapse sql-pool list'] = """
    type: command
    short-summary: "List all SQL pools"
    examples:
      - name: List SQL Analytics pools in a workspace
        text: |-
               az synapse sql-pool list --resource-group "sqlcrudtest-6845" --workspace-name "sqlcrudtest-7177"
      - name: List SQL Analytics pools in a workspace with filter
        text: |-
               az synapse sql-pool list --resource-group "sqlcrudtest-6845" --workspace-name "sqlcrudtest-7177"
"""

helps['synapse sql-pool show'] = """
    type: command
    short-summary: "Get SQL pool properties"
    examples:
      - name: Get a SQL Analytics pool
        text: |-
               az synapse sql-pool show --resource-group "sqlcrudtest-6852" --name "sqlcrudtest-9187" --workspace-name \
"sqlcrudtest-2080"
"""

helps['synapse sql-pool create'] = """
    type: command
    short-summary: "Create a SQL pool"
    parameters:
      - name: --sku
        short-summary: "SQL pool SKU"
        long-summary: |
            Usage: --sku tier=XX name=XX

            tier: The service tier
            name: The SKU name
    examples:
      - name: Create a SQL Analytics pool
        text: |-
               az synapse sql-pool create --resource-group "ExampleResourceGroup" --location "West US 2" --collation \
"" --create-mode "" --creation-date "1970-01-01T00:00:00.000Z" --max-size-bytes 0 --recoverable-database-id "" \
--restore-point-in-time "1970-01-01T00:00:00.000Z" --source-database-id "" --sku name="" tier="" --name \
"ExampleSqlPool" --workspace-name "ExampleWorkspace"
"""

helps['synapse sql-pool update'] = """
    type: command
    short-summary: "Apply a partial update to a SQL pool"
    parameters:
      - name: --sku
        short-summary: "SQL pool SKU"
        long-summary: |
            Usage: --sku tier=XX name=XX

            tier: The service tier
            name: The SKU name
    examples:
      - name: Update a SQL Analytics pool
        text: |-
               az synapse sql-pool update --resource-group "ExampleResourceGroup" --location "West US 2" --collation \
"" --create-mode "" --creation-date "1970-01-01T00:00:00.000Z" --max-size-bytes 0 --recoverable-database-id "" \
--restore-point-in-time "1970-01-01T00:00:00.000Z" --source-database-id "" --sku name="" tier="" --name \
"ExampleSqlPool" --workspace-name "ExampleWorkspace"
"""

helps['synapse sql-pool delete'] = """
    type: command
    short-summary: "Delete a SQL pool"
    examples:
      - name: Delete a SQL Analytics pool
        text: |-
               az synapse sql-pool delete --resource-group "ExampleResourceGroup" --name "ExampleSqlPool" \
--workspace-name "ExampleWorkspace"
"""

helps['synapse sql-pool pause'] = """
    type: command
    short-summary: "Pause a SQL pool"
    examples:
      - name: Pause a SQL Analytics pool
        text: |-
               az synapse sql-pool pause --resource-group "Default-SQL-SouthEastAsia" --name "testdwdb" \
--workspace-name "testsvr"
"""

helps['synapse sql-pool rename'] = """
    type: command
    short-summary: "Rename a SQL pool."
    examples:
      - name: Rename a SQL Analytics pool
        text: |-
               az synapse sql-pool rename --id "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Defa\
ult-SQL-SouthEastAsia/providers/Microsoft.Synapse/workspaces/testsvr/sqlPools/newtestdb" --resource-group \
"Default-SQL-SouthEastAsia" --name "testdb" --workspace-name "testsvr"
"""

helps['synapse sql-pool resume'] = """
    type: command
    short-summary: "Resume a SQL pool"
    examples:
      - name: Resume a SQL Analytics pool
        text: |-
               az synapse sql-pool resume --resource-group "sqlcrudtest-6852" --name "sqlcrudtest-9187" \
--workspace-name "sqlcrudtest-2080"
"""

helps['synapse sql-pool wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the synapse sql-pool is met.
    examples:
      - name: Pause executing next line of CLI script until the synapse sql-pool is successfully created.
        text: |-
               az synapse sql-pool wait --resource-group "sqlcrudtest-6852" --name "sqlcrudtest-9187" --workspace-name \
"sqlcrudtest-2080" --created
      - name: Pause executing next line of CLI script until the synapse sql-pool is successfully deleted.
        text: |-
               az synapse sql-pool wait --resource-group "sqlcrudtest-6852" --name "sqlcrudtest-9187" --workspace-name \
"sqlcrudtest-2080" --deleted
"""

helps['synapse sql-pool-metadata-sync-config'] = """
    type: group
    short-summary: synapse sql-pool-metadata-sync-config
"""

helps['synapse sql-pool-metadata-sync-config show'] = """
    type: command
    short-summary: "Get the metadata sync configuration for a SQL pool"
    examples:
      - name: Get metadata sync config for a SQL Analytics pool
        text: |-
               az synapse sql-pool-metadata-sync-config show --resource-group "ExampleResourceGroup" --sql-pool-name \
"ExampleSqlPool" --workspace-name "ExampleWorkspace"
"""

helps['synapse sql-pool-metadata-sync-config create'] = """
    type: command
    short-summary: "Set the metadata sync configuration for a SQL pool"
    examples:
      - name: Set metadata sync config for a SQL Analytics pool
        text: |-
               az synapse sql-pool-metadata-sync-config create --enabled true --resource-group "ExampleResourceGroup" \
--sql-pool-name "ExampleSqlPool" --workspace-name "ExampleWorkspace"
"""

helps['synapse sql-pool-operation-result'] = """
    type: group
    short-summary: synapse sql-pool-operation-result
"""

helps['synapse sql-pool-operation-result get-location-header-result'] = """
    type: command
    short-summary: "Get the status of a SQL pool operation"
    examples:
      - name: Get the result of an operation on a SQL Analytics pool
        text: |-
               az synapse sql-pool-operation-result get-location-header-result --operation-id \
"fedcba98-7654-4210-fedc-ba9876543210" --resource-group "ExampleResourceGroup" --sql-pool-name "ExampleSqlPool" \
--workspace-name "ExampleWorkspace"
"""

helps['synapse sql-pool-geo-backup-policy'] = """
    type: group
    short-summary: synapse sql-pool-geo-backup-policy
"""

helps['synapse sql-pool-geo-backup-policy show'] = """
    type: command
    short-summary: "Get the specified SQL pool geo backup policy"
    examples:
      - name: Get Sql pool geo backup policy
        text: |-
               az synapse sql-pool-geo-backup-policy show --resource-group "sqlcrudtest-4799" --sql-pool-name "testdw" \
--workspace-name "sqlcrudtest-5961"
"""

helps['synapse sql-pool-data-warehouse-user-activity'] = """
    type: group
    short-summary: synapse sql-pool-data-warehouse-user-activity
"""

helps['synapse sql-pool-data-warehouse-user-activity show'] = """
    type: command
    short-summary: "Gets the user activities of a SQL pool which includes running and suspended queries"
    examples:
      - name: Get a SQL Analytics pool user activity
        text: |-
               az synapse sql-pool-data-warehouse-user-activity show --resource-group "Default-SQL-SouthEastAsia" \
--sql-pool-name "testdb" --workspace-name "testsvr"
"""

helps['synapse sql-pool-restore-point'] = """
    type: group
    short-summary: synapse sql-pool-restore-point
"""

helps['synapse sql-pool-restore-point list'] = """
    type: command
    short-summary: "Get SQL pool backup information"
    examples:
      - name: Get a list of restore points of a SQL Analytics pool
        text: |-
               az synapse sql-pool-restore-point list --resource-group "Default-SQL-SouthEastAsia" --sql-pool-name \
"testDatabase" --workspace-name "testserver"
"""

helps['synapse sql-pool-restore-point create'] = """
    type: command
    short-summary: "Creates a restore point for a data warehouse."
    examples:
      - name: Creates Sql pool restore point.
        text: |-
               az synapse sql-pool-restore-point create --restore-point-label "mylabel" --resource-group \
"Default-SQL-SouthEastAsia" --sql-pool-name "testDatabase" --workspace-name "testserver"
"""

helps['synapse sql-pool-replication-link'] = """
    type: group
    short-summary: synapse sql-pool-replication-link
"""

helps['synapse sql-pool-replication-link list'] = """
    type: command
    short-summary: "Lists a Sql pool's replication links."
    examples:
      - name: Lists a Sql Analytic pool's replication links
        text: |-
               az synapse sql-pool-replication-link list --resource-group "sqlcrudtest-4799" --sql-pool-name "testdb" \
--workspace-name "sqlcrudtest-6440"
"""

helps['synapse sql-pool-transparent-data-encryption'] = """
    type: group
    short-summary: synapse sql-pool-transparent-data-encryption
"""

helps['synapse sql-pool-transparent-data-encryption show'] = """
    type: command
    short-summary: "Get a SQL pool's transparent data encryption configuration."
    examples:
      - name: Get transparent data encryption configuration of a SQL Analytics pool
        text: |-
               az synapse sql-pool-transparent-data-encryption show --resource-group "sqlcrudtest-6852" \
--sql-pool-name "sqlcrudtest-9187" --workspace-name "sqlcrudtest-2080"
"""

helps['synapse sql-pool-transparent-data-encryption create'] = """
    type: command
    short-summary: "Creates or updates a Sql pool's transparent data encryption configuration."
    examples:
      - name: Create or update a Sql pool's transparent data encryption configuration
        text: |-
               az synapse sql-pool-transparent-data-encryption create --status "Enabled" --resource-group \
"sqlcrudtest-6852" --sql-pool-name "sqlcrudtest-9187" --workspace-name "sqlcrudtest-2080"
"""

helps['synapse sql-pool-transparent-data-encryption update'] = """
    type: command
    short-summary: "Creates or updates a Sql pool's transparent data encryption configuration."
"""

helps['synapse sql-pool-blob-auditing-policy'] = """
    type: group
    short-summary: synapse sql-pool-blob-auditing-policy
"""

helps['synapse sql-pool-blob-auditing-policy show'] = """
    type: command
    short-summary: "Get a SQL pool's blob auditing policy."
    examples:
      - name: Get blob auditing policy of a SQL Analytics pool
        text: |-
               az synapse sql-pool-blob-auditing-policy show --resource-group "blobauditingtest-6852" --sql-pool-name \
"testdb" --workspace-name "blobauditingtest-2080"
"""

helps['synapse sql-pool-blob-auditing-policy create'] = """
    type: command
    short-summary: "Creates or updates a SQL pool's blob auditing policy."
    examples:
      - name: Create or update a database's blob auditing policy with all parameters
        text: |-
               az synapse sql-pool-blob-auditing-policy create --audit-actions-and-groups "DATABASE_LOGOUT_GROUP" \
--audit-actions-and-groups "DATABASE_ROLE_MEMBER_CHANGE_GROUP" --audit-actions-and-groups "UPDATE on \
database::TestDatabaseName by public" --is-azure-monitor-target-enabled true --is-storage-secondary-key-in-use false \
--retention-days 6 --state "Enabled" --storage-account-access-key "sdlfkjabc+sdlfkjsdlkfsjdfLDKFTERLKFDFKLjsdfksjdflsdk\
fD2342309432849328476458/3RSD==" --storage-account-subscription-id "00000000-1234-0000-5678-000000000000" \
--storage-endpoint "https://mystorage.blob.core.windows.net" --resource-group "blobauditingtest-4799" --sql-pool-name \
"testdb" --workspace-name "blobauditingtest-6440"
      - name: Create or update a database's blob auditing policy with minimal parameters
        text: |-
               az synapse sql-pool-blob-auditing-policy create --state "Enabled" --storage-account-access-key \
"sdlfkjabc+sdlfkjsdlkfsjdfLDKFTERLKFDFKLjsdfksjdflsdkfD2342309432849328476458/3RSD==" --storage-endpoint \
"https://mystorage.blob.core.windows.net" --resource-group "blobauditingtest-4799" --sql-pool-name "testdb" \
--workspace-name "blobauditingtest-6440"
"""

helps['synapse sql-pool-blob-auditing-policy update'] = """
    type: command
    short-summary: "Creates or updates a SQL pool's blob auditing policy."
"""

helps['synapse sql-pool-operation'] = """
    type: group
    short-summary: synapse sql-pool-operation
"""

helps['synapse sql-pool-operation list'] = """
    type: command
    short-summary: "Gets a list of operations performed on the SQL pool."
    examples:
      - name: List the Sql Analytics pool management operations
        text: |-
               az synapse sql-pool-operation list --resource-group "sqlcrudtest-7398" --sql-pool-name "testdb" \
--workspace-name "sqlcrudtest-4645"
"""

helps['synapse sql-pool-usage'] = """
    type: group
    short-summary: synapse sql-pool-usage
"""

helps['synapse sql-pool-usage list'] = """
    type: command
    short-summary: "Gets SQL pool usages."
    examples:
      - name: List the usages of a SQL Analytics pool
        text: |-
               az synapse sql-pool-usage list --resource-group "sqlcrudtest-6730" --sql-pool-name "3481" \
--workspace-name "sqlcrudtest-9007"
"""

helps['synapse sql-pool-sensitivity-label'] = """
    type: group
    short-summary: synapse sql-pool-sensitivity-label
"""

helps['synapse sql-pool-sensitivity-label create'] = """
    type: command
    short-summary: "Creates or updates the sensitivity label of a given column in a Sql pool"
    examples:
      - name: Updates the sensitivity label of a given column with all parameters
        text: |-
               az synapse sql-pool-sensitivity-label create --column-name "myColumn" --information-type "PhoneNumber" \
--information-type-id "d22fa6e9-5ee4-3bde-4c2b-a409604c4646" --label-id "bf91e08c-f4f0-478a-b016-25164b2a65ff" \
--label-name "PII" --resource-group "myRG" --schema-name "dbo" --sql-pool-name "myDatabase" --table-name "myTable" \
--workspace-name "myServer"
"""

helps['synapse sql-pool-sensitivity-label update'] = """
    type: command
    short-summary: "Creates or updates the sensitivity label of a given column in a Sql pool"
"""

helps['synapse sql-pool-sensitivity-label delete'] = """
    type: command
    short-summary: "Deletes the sensitivity label of a given column in a Sql pool"
    examples:
      - name: Deletes the sensitivity label of a given column
        text: |-
               az synapse sql-pool-sensitivity-label delete --column-name "myColumn" --resource-group "myRG" \
--schema-name "dbo" --sql-pool-name "myDatabase" --table-name "myTable" --workspace-name "myServer"
"""

helps['synapse sql-pool-sensitivity-label disable-recommendation'] = """
    type: command
    short-summary: "Disables sensitivity recommendations on a given column"
    examples:
      - name: Disables sensitivity recommendations on a given column
        text: |-
               az synapse sql-pool-sensitivity-label disable-recommendation --column-name "myColumn" --resource-group \
"myRG" --schema-name "dbo" --sql-pool-name "myDatabase" --table-name "myTable" --workspace-name "myServer"
"""

helps['synapse sql-pool-sensitivity-label enable-recommendation'] = """
    type: command
    short-summary: "Enables sensitivity recommendations on a given column (recommendations are enabled by default on \
all columns)"
    examples:
      - name: Enables sensitivity recommendations on a given column
        text: |-
               az synapse sql-pool-sensitivity-label enable-recommendation --column-name "myColumn" --resource-group \
"myRG" --schema-name "dbo" --sql-pool-name "myDatabase" --table-name "myTable" --workspace-name "myServer"
"""

helps['synapse sql-pool-sensitivity-label list-current'] = """
    type: command
    short-summary: "Gets SQL pool sensitivity labels."
    examples:
      - name: Gets the current sensitivity labels of a given SQL Analytics pool
        text: |-
               az synapse sql-pool-sensitivity-label list-current --resource-group "myRG" --sql-pool-name "myDatabase" \
--workspace-name "myServer"
"""

helps['synapse sql-pool-sensitivity-label list-recommended'] = """
    type: command
    short-summary: "Gets sensitivity labels of a given SQL pool."
    examples:
      - name: Gets the recommended sensitivity labels of a given SQL Analytics pool
        text: |-
               az synapse sql-pool-sensitivity-label list-recommended --resource-group "myRG" --sql-pool-name \
"myDatabase" --workspace-name "myServer"
"""

helps['synapse sql-pool-schema'] = """
    type: group
    short-summary: synapse sql-pool-schema
"""

helps['synapse sql-pool-schema list'] = """
    type: command
    short-summary: "Gets schemas of a given SQL pool."
    examples:
      - name: List the schema in a SQL Analytics pool
        text: |-
               az synapse sql-pool-schema list --resource-group "myRG" --sql-pool-name "myDatabase" --workspace-name \
"serverName"
"""

helps['synapse sql-pool-table'] = """
    type: group
    short-summary: synapse sql-pool-table
"""

helps['synapse sql-pool-table list'] = """
    type: command
    short-summary: "Gets tables of a given schema in a SQL pool."
    examples:
      - name: List the tables of a given schema in a SQL Analytics pool
        text: |-
               az synapse sql-pool-table list --resource-group "myRG" --schema-name "dbo" --sql-pool-name "myDatabase" \
--workspace-name "serverName"
"""

helps['synapse sql-pool-table-column'] = """
    type: group
    short-summary: synapse sql-pool-table-column
"""

helps['synapse sql-pool-table-column list'] = """
    type: command
    short-summary: "Gets columns in a given table in a SQL pool."
    examples:
      - name: List the columns in a table of a given schema in a SQL Analytics pool
        text: |-
               az synapse sql-pool-table-column list --resource-group "myRG" --schema-name "dbo" --sql-pool-name \
"myDatabase" --table-name "table1" --workspace-name "serverName"
"""

helps['synapse sql-pool-connection-policy'] = """
    type: group
    short-summary: synapse sql-pool-connection-policy
"""

helps['synapse sql-pool-connection-policy show'] = """
    type: command
    short-summary: "Get a Sql pool's connection policy, which is used with table auditing."
    examples:
      - name: Get a connection policy of a SQL Analytics pool
        text: |-
               az synapse sql-pool-connection-policy show --resource-group "blobauditingtest-6852" --sql-pool-name \
"testdb" --workspace-name "blobauditingtest-2080"
"""

helps['synapse sql-pool-vulnerability-assessment'] = """
    type: group
    short-summary: synapse sql-pool-vulnerability-assessment
"""

helps['synapse sql-pool-vulnerability-assessment list'] = """
    type: command
    short-summary: "Lists the vulnerability assessment policies associated with a SQL pool."
    examples:
      - name: Get a vulnerability assessment of a SQL Analytics pool
        text: |-
               az synapse sql-pool-vulnerability-assessment list --resource-group "vulnerabilityaseessmenttest-4799" \
--sql-pool-name "testdb" --workspace-name "vulnerabilityaseessmenttest-6440"
"""

helps['synapse sql-pool-vulnerability-assessment show'] = """
    type: command
    short-summary: "Gets the Sql pool's vulnerability assessment."
    examples:
      - name: Get a Sql pool's vulnerability assessment
        text: |-
               az synapse sql-pool-vulnerability-assessment show --resource-group "vulnerabilityaseessmenttest-4799" \
--sql-pool-name "testdb" --workspace-name "vulnerabilityaseessmenttest-6440"
"""

helps['synapse sql-pool-vulnerability-assessment create'] = """
    type: command
    short-summary: "Creates or updates the Sql pool vulnerability assessment."
    parameters:
      - name: --recurring-scans
        short-summary: "The recurring scans settings"
        long-summary: |
            Usage: --recurring-scans is-enabled=XX email-subscription-admins=XX emails=XX

            is-enabled: Recurring scans state.
            email-subscription-admins: Specifies that the schedule scan notification will be is sent to the \
subscription administrators.
            emails: Specifies an array of e-mail addresses to which the scan notification is sent.
    examples:
      - name: Create a database's vulnerability assessment with all parameters
        text: |-
               az synapse sql-pool-vulnerability-assessment create --recurring-scans email-subscription-admins=true \
emails="email1@mail.com" emails="email2@mail.com" is-enabled=true --storage-account-access-key \
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" --storage-container-path "https://myStorage.blob.core.window\
s.net/vulnerability-assessment/" --storage-container-sas-key "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"\
 --resource-group "vulnerabilityaseessmenttest-4799" --sql-pool-name "testdb" --workspace-name \
"vulnerabilityaseessmenttest-6440"
      - name: Create a database's vulnerability assessment with minimal parameters, when storageAccountAccessKey is specified
        text: |-
               az synapse sql-pool-vulnerability-assessment create --storage-account-access-key \
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" --storage-container-path "https://myStorage.blob.core.window\
s.net/vulnerability-assessment/" --resource-group "vulnerabilityaseessmenttest-4799" --sql-pool-name "testdb" \
--workspace-name "vulnerabilityaseessmenttest-6440"
      - name: Create a database's vulnerability assessment with minimal parameters, when storageContainerSasKey is specified
        text: |-
               az synapse sql-pool-vulnerability-assessment create --storage-container-path \
"https://myStorage.blob.core.windows.net/vulnerability-assessment/" --storage-container-sas-key \
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" --resource-group "vulnerabilityaseessmenttest-4799" \
--sql-pool-name "testdb" --workspace-name "vulnerabilityaseessmenttest-6440"
"""

helps['synapse sql-pool-vulnerability-assessment update'] = """
    type: command
    short-summary: "Creates or updates the Sql pool vulnerability assessment."
    parameters:
      - name: --recurring-scans
        short-summary: "The recurring scans settings"
        long-summary: |
            Usage: --recurring-scans is-enabled=XX email-subscription-admins=XX emails=XX

            is-enabled: Recurring scans state.
            email-subscription-admins: Specifies that the schedule scan notification will be is sent to the \
subscription administrators.
            emails: Specifies an array of e-mail addresses to which the scan notification is sent.
"""

helps['synapse sql-pool-vulnerability-assessment delete'] = """
    type: command
    short-summary: "Removes the database's vulnerability assessment."
    examples:
      - name: Remove a database's vulnerability assessment
        text: |-
               az synapse sql-pool-vulnerability-assessment delete --resource-group "vulnerabilityaseessmenttest-4799" \
--sql-pool-name "testdb" --workspace-name "vulnerabilityaseessmenttest-6440"
"""

helps['synapse sql-pool-vulnerability-assessment-scan'] = """
    type: group
    short-summary: synapse sql-pool-vulnerability-assessment-scan
"""

helps['synapse sql-pool-vulnerability-assessment-scan list'] = """
    type: command
    short-summary: "Lists the vulnerability assessment scans of a SQL pool."
    examples:
      - name: Get a vulnerability scan record of a SQL Analytics pool
        text: |-
               az synapse sql-pool-vulnerability-assessment-scan list --resource-group "vulnerabilityassessmenttest-471\
1" --sql-pool-name "testdb" --workspace-name "vulnerabilityassessmenttest-6411"
"""

helps['synapse sql-pool-vulnerability-assessment-scan export'] = """
    type: command
    short-summary: "Convert an existing scan result to a human readable format. If already exists nothing happens"
    examples:
      - name: Export a database's vulnerability assessment scan results.
        text: |-
               az synapse sql-pool-vulnerability-assessment-scan export --resource-group \
"vulnerabilityassessmenttest-4799" --scan-id "scan001" --sql-pool-name "testdb" --workspace-name \
"vulnerabilityassessmenttest-6440"
"""

helps['synapse sql-pool-vulnerability-assessment-scan initiate-scan'] = """
    type: command
    short-summary: "Executes a Vulnerability Assessment database scan."
    examples:
      - name: Executes a Sql pool's vulnerability assessment scan.
        text: |-
               az synapse sql-pool-vulnerability-assessment-scan initiate-scan --resource-group \
"vulnerabilityassessmenttest-4711" --scan-id "scan01" --sql-pool-name "testdb" --workspace-name \
"vulnerabilityassessmenttest-6411"
"""

helps['synapse sql-pool-security-alert-policy'] = """
    type: group
    short-summary: synapse sql-pool-security-alert-policy
"""

helps['synapse sql-pool-security-alert-policy show'] = """
    type: command
    short-summary: "Get a Sql pool's security alert policy."
    examples:
      - name: Get a security alert of a SQL Analytics pool
        text: |-
               az synapse sql-pool-security-alert-policy show --resource-group "securityalert-6852" --sql-pool-name \
"testdb" --workspace-name "securityalert-2080"
"""

helps['synapse sql-pool-security-alert-policy create'] = """
    type: command
    short-summary: "Create or update a Sql pool's security alert policy."
    examples:
      - name: Update a Sql pool's threat detection policy with all parameters
        text: |-
               az synapse sql-pool-security-alert-policy create --disabled-alerts "Sql_Injection" --disabled-alerts \
"Usage_Anomaly" --email-account-admins true --email-addresses "test@microsoft.com" --email-addresses \
"user@microsoft.com" --retention-days 6 --state "Enabled" --storage-account-access-key "sdlfkjabc+sdlfkjsdlkfsjdfLDKFTE\
RLKFDFKLjsdfksjdflsdkfD2342309432849328476458/3RSD==" --storage-endpoint "https://mystorage.blob.core.windows.net" \
--resource-group "securityalert-4799" --sql-pool-name "testdb" --workspace-name "securityalert-6440"
      - name: Update a Sql pool's threat detection policy with minimal parameters
        text: |-
               az synapse sql-pool-security-alert-policy create --state "Enabled" --resource-group \
"securityalert-4799" --sql-pool-name "testdb" --workspace-name "securityalert-6440"
"""

helps['synapse sql-pool-security-alert-policy update'] = """
    type: command
    short-summary: "Create or update a Sql pool's security alert policy."
"""

helps['synapse sql-pool-vulnerability-assessment-rule-baseline'] = """
    type: group
    short-summary: synapse sql-pool-vulnerability-assessment-rule-baseline
"""

helps['synapse sql-pool-vulnerability-assessment-rule-baseline create'] = """
    type: command
    short-summary: "Creates or updates a Sql pool's vulnerability assessment rule baseline."
    parameters:
      - name: --baseline-results
        short-summary: "The rule baseline result"
        long-summary: |
            Usage: --baseline-results result=XX

            result: Required. The rule baseline result

            Multiple actions can be specified by using more than one --baseline-results argument.
    examples:
      - name: Creates or updates a database's vulnerability assessment rule baseline.
        text: |-
               az synapse sql-pool-vulnerability-assessment-rule-baseline create --baseline-name "default" \
--baseline-results result="userA" result="SELECT" --baseline-results result="userB" result="SELECT" --baseline-results \
result="userC" result="SELECT" result="tableId_4" --resource-group "vulnerabilityaseessmenttest-4799" --rule-id \
"VA1001" --sql-pool-name "testdb" --workspace-name "vulnerabilityaseessmenttest-6440"
"""

helps['synapse sql-pool-vulnerability-assessment-rule-baseline update'] = """
    type: command
    short-summary: "Creates or updates a Sql pool's vulnerability assessment rule baseline."
    parameters:
      - name: --baseline-results
        short-summary: "The rule baseline result"
        long-summary: |
            Usage: --baseline-results result=XX

            result: Required. The rule baseline result

            Multiple actions can be specified by using more than one --baseline-results argument.
"""

helps['synapse sql-pool-vulnerability-assessment-rule-baseline delete'] = """
    type: command
    short-summary: "Removes the database's vulnerability assessment rule baseline."
    examples:
      - name: Removes a database's vulnerability assessment rule baseline.
        text: |-
               az synapse sql-pool-vulnerability-assessment-rule-baseline delete --baseline-name "default" \
--resource-group "vulnerabilityaseessmenttest-4799" --rule-id "VA1001" --sql-pool-name "testdb" --workspace-name \
"vulnerabilityaseessmenttest-6440"
"""

helps['synapse workspace'] = """
    type: group
    short-summary: synapse workspace
"""

helps['synapse workspace list'] = """
    type: command
    short-summary: "Returns a list of workspaces in a subscription"
    examples:
      - name: List workspaces in resource group
        text: |-
               az synapse workspace list --resource-group "resourceGroup1"
"""

helps['synapse workspace show'] = """
    type: command
    short-summary: "Gets a workspace"
    examples:
      - name: Get a workspace
        text: |-
               az synapse workspace show --resource-group "resourceGroup1" --name "workspace1"
"""

helps['synapse workspace create'] = """
    type: command
    short-summary: "Creates or updates a workspace"
    parameters:
      - name: --default-data-lake-storage
        short-summary: "Workspace default data lake storage account details"
        long-summary: |
            Usage: --default-data-lake-storage account-url=XX filesystem=XX

            account-url: Account URL
            filesystem: Filesystem name
      - name: --private-endpoint-connections
        short-summary: "Private endpoint connections to the workspace"
        long-summary: |
            Usage: --private-endpoint-connections status=XX description=XX

            status: The private link service connection status.
            description: The private link service connection description.

            Multiple actions can be specified by using more than one --private-endpoint-connections argument.
    examples:
      - name: Create or update a workspace
        text: |-
               az synapse workspace create --resource-group "resourceGroup1" --identity-type "SystemAssigned" \
--location "East US" --default-data-lake-storage account-url="https://accountname.dfs.core.windows.net" \
filesystem="default" --managed-resource-group-name "workspaceManagedResourceGroupUnique" --managed-virtual-network \
"default" --sql-administrator-login "login" --sql-administrator-login-password "password" --tags key="value" --name \
"workspace1"
"""

helps['synapse workspace update'] = """
    type: command
    short-summary: "Updates a workspace"
    examples:
      - name: Update a workspace
        text: |-
               az synapse workspace update --resource-group "resourceGroup1" --name "workspace1" --identity-type \
"SystemAssigned" --sql-administrator-login-password "password" --tags key="value"
"""

helps['synapse workspace delete'] = """
    type: command
    short-summary: "Deletes a workspace"
    examples:
      - name: Delete a workspace
        text: |-
               az synapse workspace delete --resource-group "resourceGroup1" --name "workspace1"
"""

helps['synapse workspace wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the synapse workspace is met.
    examples:
      - name: Pause executing next line of CLI script until the synapse workspace is successfully created.
        text: |-
               az synapse workspace wait --resource-group "resourceGroup1" --name "workspace1" --created
      - name: Pause executing next line of CLI script until the synapse workspace is successfully updated.
        text: |-
               az synapse workspace wait --resource-group "resourceGroup1" --name "workspace1" --updated
      - name: Pause executing next line of CLI script until the synapse workspace is successfully deleted.
        text: |-
               az synapse workspace wait --resource-group "resourceGroup1" --name "workspace1" --deleted
"""

helps['synapse workspace-aad-admin'] = """
    type: group
    short-summary: synapse workspace-aad-admin
"""

helps['synapse workspace-aad-admin show'] = """
    type: command
    short-summary: "Gets a workspace active directory admin"
    examples:
      - name: Get workspace active directory admin
        text: |-
               az synapse workspace-aad-admin show --resource-group "resourceGroup1" --workspace-name "workspace1"
"""

helps['synapse workspace-aad-admin create'] = """
    type: command
    short-summary: "Creates or updates a workspace active directory admin"
    examples:
      - name: Create or update workspace active directory admin
        text: |-
               az synapse workspace-aad-admin create --administrator-type "ActiveDirectory" --login "bob@contoso.com" \
--sid "c6b82b90-a647-49cb-8a62-0d2d3cb7ac7c" --tenant-id "c6b82b90-a647-49cb-8a62-0d2d3cb7ac7c" --resource-group \
"resourceGroup1" --workspace-name "workspace1"
"""

helps['synapse workspace-aad-admin update'] = """
    type: command
    short-summary: "Creates or updates a workspace active directory admin"
"""

helps['synapse workspace-aad-admin delete'] = """
    type: command
    short-summary: "Deletes a workspace active directory admin"
    examples:
      - name: Delete workspace active directory admin
        text: |-
               az synapse workspace-aad-admin delete --resource-group "resourceGroup1" --workspace-name "workspace1"
"""

helps['synapse workspace-aad-admin wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the synapse workspace-aad-admin is met.
    examples:
      - name: Pause executing next line of CLI script until the synapse workspace-aad-admin is successfully created.
        text: |-
               az synapse workspace-aad-admin wait --resource-group "resourceGroup1" --workspace-name "workspace1" \
--created
      - name: Pause executing next line of CLI script until the synapse workspace-aad-admin is successfully updated.
        text: |-
               az synapse workspace-aad-admin wait --resource-group "resourceGroup1" --workspace-name "workspace1" \
--updated
      - name: Pause executing next line of CLI script until the synapse workspace-aad-admin is successfully deleted.
        text: |-
               az synapse workspace-aad-admin wait --resource-group "resourceGroup1" --workspace-name "workspace1" \
--deleted
"""

helps['synapse workspace-managed-identity-sql-control-setting'] = """
    type: group
    short-summary: synapse workspace-managed-identity-sql-control-setting
"""

helps['synapse workspace-managed-identity-sql-control-setting show'] = """
    type: command
    short-summary: "Get Managed Identity Sql Control Settings"
    examples:
      - name: Get managed identity sql control settings
        text: |-
               az synapse workspace-managed-identity-sql-control-setting show --resource-group "resourceGroup1" \
--workspace-name "workspace1"
"""

helps['synapse workspace-managed-identity-sql-control-setting create'] = """
    type: command
    short-summary: "Create or update Managed Identity Sql Control Settings"
    examples:
      - name: Create or update managed identity sql control settings
        text: |-
               az synapse workspace-managed-identity-sql-control-setting create --resource-group "resourceGroup1" \
--workspace-name "workspace1"
"""

helps['synapse workspace-managed-identity-sql-control-setting update'] = """
    type: command
    short-summary: "Create or update Managed Identity Sql Control Settings"
"""

helps['synapse integration-runtime'] = """
    type: group
    short-summary: synapse integration-runtime
"""

helps['synapse integration-runtime list'] = """
    type: command
    short-summary: "List all integration runtimes"
    examples:
      - name: List integration runtimes
        text: |-
               az synapse integration-runtime list --resource-group "exampleResourceGroup" --workspace-name \
"exampleWorkspace"
"""

helps['synapse integration-runtime show'] = """
    type: command
    short-summary: "Get an integration runtime"
    examples:
      - name: Get integration runtime
        text: |-
               az synapse integration-runtime show --name "exampleIntegrationRuntime" --resource-group \
"exampleResourceGroup" --workspace-name "exampleWorkspace"
"""

helps['synapse integration-runtime create'] = """
    type: command
    short-summary: "Create an integration runtime"
    examples:
      - name: Create integration runtime
        text: |-
               az synapse integration-runtime create --properties "{\\"type\\":\\"SelfHosted\\",\\"description\\":\\"A \
selfhosted integration runtime\\"}" --name "exampleIntegrationRuntime" --resource-group "exampleResourceGroup" \
--workspace-name "exampleWorkspace"
"""

helps['synapse integration-runtime update'] = """
    type: command
    short-summary: "Update an integration runtime"
    examples:
      - name: Update integration runtime
        text: |-
               az synapse integration-runtime update --name "exampleIntegrationRuntime" --resource-group \
"exampleResourceGroup" --auto-update "Off" --update-delay-offset "\\"PT3H\\"" --workspace-name "exampleWorkspace"
"""

helps['synapse integration-runtime delete'] = """
    type: command
    short-summary: "Delete an integration runtime"
    examples:
      - name: Delete integration runtime
        text: |-
               az synapse integration-runtime delete --name "exampleIntegrationRuntime" --resource-group \
"exampleResourceGroup" --workspace-name "exampleWorkspace"
"""

helps['synapse integration-runtime start'] = """
    type: command
    short-summary: "Start an integration runtime"
    examples:
      - name: Start integration runtime
        text: |-
               az synapse integration-runtime start --name "exampleManagedIntegrationRuntime" --resource-group \
"exampleResourceGroup" --workspace-name "exampleWorkspace"
"""

helps['synapse integration-runtime stop'] = """
    type: command
    short-summary: "Stop an integration runtime"
    examples:
      - name: Stop integration runtime
        text: |-
               az synapse integration-runtime stop --name "exampleManagedIntegrationRuntime" --resource-group \
"exampleResourceGroup" --workspace-name "exampleWorkspace"
"""

helps['synapse integration-runtime upgrade'] = """
    type: command
    short-summary: "Upgrade an integration runtime"
    examples:
      - name: Upgrade integration runtime
        text: |-
               az synapse integration-runtime upgrade --name "exampleIntegrationRuntime" --resource-group \
"exampleResourceGroup" --workspace-name "exampleWorkspace"
"""

helps['synapse integration-runtime wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the synapse integration-runtime is met.
    examples:
      - name: Pause executing next line of CLI script until the synapse integration-runtime is successfully created.
        text: |-
               az synapse integration-runtime wait --name "exampleIntegrationRuntime" --resource-group \
"exampleResourceGroup" --workspace-name "exampleWorkspace" --created
      - name: Pause executing next line of CLI script until the synapse integration-runtime is successfully deleted.
        text: |-
               az synapse integration-runtime wait --name "exampleIntegrationRuntime" --resource-group \
"exampleResourceGroup" --workspace-name "exampleWorkspace" --deleted
"""

helps['synapse integration-runtime-node-ip-address'] = """
    type: group
    short-summary: synapse integration-runtime-node-ip-address
"""

helps['synapse integration-runtime-node-ip-address get'] = """
    type: command
    short-summary: "Get the IP address of an integration runtime node"
    examples:
      - name: Get integration runtime node IP address
        text: |-
               az synapse integration-runtime-node-ip-address get --integration-runtime-name \
"exampleIntegrationRuntime" --node-name "Node_1" --resource-group "exampleResourceGroup" --workspace-name \
"exampleWorkspace"
"""

helps['synapse integration-runtime-object-metadata'] = """
    type: group
    short-summary: synapse integration-runtime-object-metadata
"""

helps['synapse integration-runtime-object-metadata get'] = """
    type: command
    short-summary: "Get object metadata from an integration runtime"
    examples:
      - name: Get integration runtime object metadata
        text: |-
               az synapse integration-runtime-object-metadata get --metadata-path "ssisFolders" \
--integration-runtime-name "testactivityv2" --resource-group "exampleResourceGroup" --workspace-name \
"exampleWorkspace"
"""

helps['synapse integration-runtime-object-metadata refresh'] = """
    type: command
    short-summary: "Refresh the object metadata in an integration runtime"
    examples:
      - name: Refresh object metadata
        text: |-
               az synapse integration-runtime-object-metadata refresh --integration-runtime-name "testactivityv2" \
--resource-group "exampleResourceGroup" --workspace-name "exampleWorkspace"
"""

helps['synapse integration-runtime-node'] = """
    type: group
    short-summary: synapse integration-runtime-node
"""

helps['synapse integration-runtime-node show'] = """
    type: command
    short-summary: "Get an integration runtime node"
    examples:
      - name: Get integration runtime node
        text: |-
               az synapse integration-runtime-node show --integration-runtime-name "exampleIntegrationRuntime" \
--node-name "Node_1" --resource-group "exampleResourceGroup" --workspace-name "exampleWorkspace"
"""

helps['synapse integration-runtime-node update'] = """
    type: command
    short-summary: "Create an integration runtime node"
    examples:
      - name: Update integration runtime node
        text: |-
               az synapse integration-runtime-node update --integration-runtime-name "exampleIntegrationRuntime" \
--node-name "Node_1" --resource-group "exampleResourceGroup" --concurrent-jobs-limit 2 --workspace-name \
"exampleWorkspace"
"""

helps['synapse integration-runtime-node delete'] = """
    type: command
    short-summary: "Delete an integration runtime node"
    examples:
      - name: Delete integration runtime node
        text: |-
               az synapse integration-runtime-node delete --integration-runtime-name "exampleIntegrationRuntime" \
--node-name "Node_1" --resource-group "exampleResourceGroup" --workspace-name "exampleWorkspace"
"""

helps['synapse integration-runtime-credentials'] = """
    type: group
    short-summary: synapse integration-runtime-credentials
"""

helps['synapse integration-runtime-credentials sync'] = """
    type: command
    short-summary: "Force the integration runtime to synchronize credentials across integration runtime nodes, and \
this will override the credentials across all worker nodes with those available on the dispatcher node. If you already \
have the latest credential backup file, you should manually import it (preferred) on any self-hosted integration \
runtime node than using this API directly."
    examples:
      - name: Sync credentials
        text: |-
               az synapse integration-runtime-credentials sync --integration-runtime-name "exampleIntegrationRuntime" \
--resource-group "exampleResourceGroup" --workspace-name "exampleWorkspace"
"""

helps['synapse integration-runtime-connection-info'] = """
    type: group
    short-summary: synapse integration-runtime-connection-info
"""

helps['synapse integration-runtime-connection-info get'] = """
    type: command
    short-summary: "Get connection info for an integration runtime"
    examples:
      - name: Get connection info
        text: |-
               az synapse integration-runtime-connection-info get --integration-runtime-name \
"exampleIntegrationRuntime" --resource-group "exampleResourceGroup" --workspace-name "exampleWorkspace"
"""

helps['synapse integration-runtime-auth-key'] = """
    type: group
    short-summary: synapse integration-runtime-auth-key
"""

helps['synapse integration-runtime-auth-key list'] = """
    type: command
    short-summary: "List authentication keys in an integration runtime"
    examples:
      - name: List auth keys
        text: |-
               az synapse integration-runtime-auth-key list --integration-runtime-name "exampleIntegrationRuntime" \
--resource-group "exampleResourceGroup" --workspace-name "exampleWorkspace"
"""

helps['synapse integration-runtime-auth-key regenerate'] = """
    type: command
    short-summary: "Regenerate the authentication key for an integration runtime"
    examples:
      - name: Regenerate auth key
        text: |-
               az synapse integration-runtime-auth-key regenerate --integration-runtime-name \
"exampleIntegrationRuntime" --key-name "authKey2" --resource-group "exampleResourceGroup" --workspace-name \
"exampleWorkspace"
"""

helps['synapse integration-runtime-monitoring-data'] = """
    type: group
    short-summary: synapse integration-runtime-monitoring-data
"""

helps['synapse integration-runtime-monitoring-data get'] = """
    type: command
    short-summary: "Get monitoring data for an integration runtime"
    examples:
      - name: Get monitoring data
        text: |-
               az synapse integration-runtime-monitoring-data get --integration-runtime-name \
"exampleIntegrationRuntime" --resource-group "exampleResourceGroup" --workspace-name "exampleWorkspace"
"""

helps['synapse integration-runtime-status'] = """
    type: group
    short-summary: synapse integration-runtime-status
"""

helps['synapse integration-runtime-status get'] = """
    type: command
    short-summary: "Get the integration runtime status"
    examples:
      - name: Get status
        text: |-
               az synapse integration-runtime-status get --integration-runtime-name "exampleIntegrationRuntime" \
--resource-group "exampleResourceGroup" --workspace-name "exampleWorkspace"
"""

helps['synapse private-link-resource'] = """
    type: group
    short-summary: synapse private-link-resource
"""

helps['synapse private-link-resource list'] = """
    type: command
    short-summary: "Get all private link resources for a workspaces"
    examples:
      - name: Get private link resources for workspace
        text: |-
               az synapse private-link-resource list --resource-group "ExampleResourceGroup" --workspace-name \
"ExampleWorkspace"
"""

helps['synapse private-link-resource show'] = """
    type: command
    short-summary: "Get private link resource in workspace"
    examples:
      - name: Get private link resources for workspace
        text: |-
               az synapse private-link-resource show --name "sql" --resource-group "ExampleResourceGroup" \
--workspace-name "ExampleWorkspace"
"""

helps['synapse private-endpoint-connection'] = """
    type: group
    short-summary: synapse private-endpoint-connection
"""

helps['synapse private-endpoint-connection list'] = """
    type: command
    short-summary: "Lists private endpoint connection in workspace."
    examples:
      - name: List private endpoint connections in workspace
        text: |-
               az synapse private-endpoint-connection list --resource-group "ExampleResourceGroup" --workspace-name \
"ExampleWorkspace"
"""

helps['synapse private-endpoint-connection show'] = """
    type: command
    short-summary: "Gets a private endpoint connection."
    examples:
      - name: Get private endpoint connection
        text: |-
               az synapse private-endpoint-connection show --name "ExamplePrivateEndpointConnection" --resource-group \
"ExampleResourceGroup" --workspace-name "ExampleWorkspace"
"""

helps['synapse private-endpoint-connection create'] = """
    type: command
    short-summary: "Approve or reject a private endpoint connection."
    examples:
      - name: Approve private endpoint connection
        text: |-
               az synapse private-endpoint-connection create --name "ExamplePrivateEndpointConnection" \
--resource-group "ExampleResourceGroup" --workspace-name "ExampleWorkspace"
"""

helps['synapse private-endpoint-connection delete'] = """
    type: command
    short-summary: "Delete a private endpoint connection."
    examples:
      - name: Delete private endpoint connection
        text: |-
               az synapse private-endpoint-connection delete --name "ExamplePrivateEndpointConnection" \
--resource-group "ExampleResourceGroup" --workspace-name "ExampleWorkspace"
"""

helps['synapse private-endpoint-connection wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the synapse private-endpoint-connection is \
met.
    examples:
      - name: Pause executing next line of CLI script until the synapse private-endpoint-connection is successfully \
created.
        text: |-
               az synapse private-endpoint-connection wait --name "ExamplePrivateEndpointConnection" --resource-group \
"ExampleResourceGroup" --workspace-name "ExampleWorkspace" --created
      - name: Pause executing next line of CLI script until the synapse private-endpoint-connection is successfully \
deleted.
        text: |-
               az synapse private-endpoint-connection wait --name "ExamplePrivateEndpointConnection" --resource-group \
"ExampleResourceGroup" --workspace-name "ExampleWorkspace" --deleted
"""

helps['synapse private-link-hub'] = """
    type: group
    short-summary: synapse private-link-hub
"""

helps['synapse private-link-hub list'] = """
    type: command
    short-summary: "Returns a list of privateLinkHubs in a subscription"
    examples:
      - name: List privateLinkHubs in resource group
        text: |-
               az synapse private-link-hub list --resource-group "resourceGroup1"
"""

helps['synapse private-link-hub show'] = """
    type: command
    short-summary: "Gets a privateLinkHub"
    examples:
      - name: Get a privateLinkHub
        text: |-
               az synapse private-link-hub show --name "privateLinkHub1" --resource-group "resourceGroup1"
"""

helps['synapse private-link-hub create'] = """
    type: command
    short-summary: "Creates or updates a privateLinkHub"
    examples:
      - name: Create or update a privateLinkHub
        text: |-
               az synapse private-link-hub create --location "East US" --tags key="value" --name "privateLinkHub1" \
--resource-group "resourceGroup1"
"""

helps['synapse private-link-hub update'] = """
    type: command
    short-summary: "Updates a privateLinkHub"
    examples:
      - name: Update a privateLinkHub
        text: |-
               az synapse private-link-hub update --name "privateLinkHub1" --tags key="value" --resource-group \
"resourceGroup1"
"""

helps['synapse private-link-hub delete'] = """
    type: command
    short-summary: "Deletes a privateLinkHub"
    examples:
      - name: Delete a privateLinkHub
        text: |-
               az synapse private-link-hub delete --name "privateLinkHub1" --resource-group "resourceGroup1"
"""
