# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from .example_steps import step_workspace_create
from .example_steps import step_big_data_pool_create
from .example_steps import step_big_data_pool_list
from .example_steps import step_big_data_pool_update
from .example_steps import step_integration_runtime_create
from .example_steps import step_integration_runtime_show
from .example_steps import step_integration_runtime_list
from .example_steps import step_integration_runtime_start
from .example_steps import step_integration_runtime_stop
from .example_steps import step_integration_runtime_upgrade
from .example_steps import step_integration_runtime_update
from .example_steps import step_integration_runtime_auth_key_list
from .example_steps import step_integration_runtime_auth_key_regenerate
from .example_steps import step_integration_runtime_connection_info_get
from .example_steps import step_integration_runtime_credentials_sync
from .example_steps import step_integration_runtime_monitoring_data_get
from .example_steps import step_integration_runtime_node_ip_address_get
from .example_steps import step_integration_runtime_node_show
from .example_steps import step_integration_runtime_node_update
from .example_steps import step_integration_runtime_object_metadata_get
from .example_steps import step_integration_runtime_object_metadata_refresh
from .example_steps import step_integration_runtime_status_get
from .example_steps import step_ip_firewall_rule_show
from .example_steps import step_ip_firewall_rule_list
from .example_steps import step_ip_firewall_rule_replace_all
from .example_steps import step_operation_show_azure_async_header_result
from .example_steps import step_operation_show_location_header_result
from .example_steps import step_private_endpoint_connection_create
from .example_steps import step_private_endpoint_connection_show
from .example_steps import step_private_endpoint_connection_list
from .example_steps import step_private_link_hub_create
from .example_steps import step_private_link_hub_show
from .example_steps import step_private_link_hub_list
from .example_steps import step_private_link_hub_list2
from .example_steps import step_private_link_hub_update
from .example_steps import step_big_data_pool_show
from .example_steps import step_workspace_show
from .example_steps import step_workspace_list
from .example_steps import step_workspace_list2
from .example_steps import step_workspace_update
from .example_steps import step_private_link_resource_list
from .example_steps import step_sql_pool_create
from .example_steps import step_sql_pool_show
from .example_steps import step_sql_pool_list
from .example_steps import step_sql_pool_list2
from .example_steps import step_sql_pool_pause
from .example_steps import step_sql_pool_rename
from .example_steps import step_sql_pool_resume
from .example_steps import step_sql_pool_update
from .example_steps import step_sql_pool_blob_auditing_policy_create
from .example_steps import step_sql_pool_blob_auditing_policy_create2
from .example_steps import step_sql_pool_blob_auditing_policy_show
from .example_steps import step_sql_pool_connection_policy_show
from .example_steps import step_sql_pool_data_warehouse_user_activity_show
from .example_steps import step_sql_pool_geo_backup_policy_show
from .example_steps import step_sql_pool_metadata_sync_config_create
from .example_steps import step_sql_pool_metadata_sync_config_show
from .example_steps import step_sql_pool_operation
from .example_steps import step_sql_pool_operation_list
from .example_steps import step_sql_pool_replication_link_list
from .example_steps import step_sql_pool_restore_point_list
from .example_steps import step_sql_pool_restore_point_create
from .example_steps import step_sql_pool_schema_list
from .example_steps import step_sql_pool_security_alert_policy_update
from .example_steps import step_sql_pool_security_alert_policy_show
from .example_steps import step_sql_pool_sensitivity_label_create
from .example_steps import step_sql_pool_sensitivity_label_list_current
from .example_steps import step_sql_pool_sensitivity_label_list_recommended
from .example_steps import step_sql_pool_sensitivity
from .example_steps import step_sql_pool_sensitivity2
from .example_steps import step_sql_pool_table_column_list
from .example_steps import step_sql_pool_table_list
from .example_steps import step_sql_pool_transparent_data_encryption_create
from .example_steps import step_sql_pool_transparent_data_encryption_show
from .example_steps import step_sql_pool_usage_list
from .example_steps import step_sql_pool_vulnerability
from .example_steps import step_sql_pool_vulnerability_assessment_scan_list
from .example_steps import step_sql_pool_vulnerability3
from .example_steps import step_sql_pool_vulnerability_assessment_scan_export
from .example_steps import step_sql_pool_vulnerability_assessment_create
from .example_steps import step_sql_pool_vulnerability_assessment_create2
from .example_steps import step_sql_pool_vulnerability_assessment_create3
from .example_steps import step_sql_pool_vulnerability_assessment_show
from .example_steps import step_sql_pool_vulnerability_assessment_list
from .example_steps import step_sql_pool_sensitivity_label_delete
from .example_steps import step_workspace_aad_admin_create
from .example_steps import step_workspace_aad_admin_show
from .example_steps import step_workspace_managed_identity
from .example_steps import step_workspace_managed_identity2
from .example_steps import step_big_data_pool_delete
from .example_steps import step_integration_runtime_node_delete
from .example_steps import step_integration_runtime_delete
from .example_steps import step_ip_firewall_rule_delete
from .example_steps import step_private_endpoint_connection_delete
from .example_steps import step_sql_pool_vulnerability2
from .example_steps import step_private_link_hub_delete
from .example_steps import step_sql_pool_vulnerability_assessment_delete
from .example_steps import step_sql_pool_delete
from .example_steps import step_workspace_aad_admin_delete
from .example_steps import step_workspace_delete
from .example_steps import step_workspace_create_min
from .example_steps import step_big_data_pool_create_min
from .example_steps import step_big_data_pool_list_min
from .example_steps import step_big_data_pool_update_min
from .example_steps import step_integration_runtime_create_min
from .example_steps import step_integration_runtime_show_min
from .example_steps import step_integration_runtime_list_min
from .example_steps import step_integration_runtime_start_min
from .example_steps import step_integration_runtime_stop_min
from .example_steps import step_integration_runtime_upgrade_min
from .example_steps import step_integration_runtime_update_min
from .example_steps import step_integration_runtime_auth_key_list_min
from .example_steps import step_integration_runtime_auth_key_regenerate_min
from .example_steps import step_integration_runtime_connection_info_get_min
from .example_steps import step_integration_runtime_credentials_sync_min
from .example_steps import step_integration_runtime_monitoring_data_get_min
from .example_steps import step_integration_runtime_node_ip_address_get_min
from .example_steps import step_integration_runtime_node_show_min
from .example_steps import step_integration_runtime_node_update_min
from .example_steps import step_integration_runtime_object_metadata_get_min
from .example_steps import step_integration_runtime_object_metadata_refresh_min
from .example_steps import step_integration_runtime_status_get_min
from .example_steps import step_ip_firewall_rule_show_min
from .example_steps import step_ip_firewall_rule_show_min
from .example_steps import step_ip_firewall_rule_list_min
from .example_steps import step_ip_firewall_rule_replace_all_min
from .example_steps import step_operation_show_azure_async_header_result_min
from .example_steps import step_operation_show_location_header_result_min
from .example_steps import step_private_endpoint_connection_create_min
from .example_steps import step_private_endpoint_connection_show_min
from .example_steps import step_private_endpoint_connection_list_min
from .example_steps import step_private_link_hub_create_min
from .example_steps import step_private_link_hub_show_min
from .example_steps import step_private_link_hub_list_min
from .example_steps import step_private_link_hub_list2_min
from .example_steps import step_private_link_hub_update_min
from .example_steps import step_big_data_pool_show_min
from .example_steps import step_workspace_show_min
from .example_steps import step_workspace_list_min
from .example_steps import step_workspace_list2_min
from .example_steps import step_workspace_update_min
from .example_steps import step_private_link_resource_list_min
from .example_steps import step_private_link_resource_list_min
from .example_steps import step_sql_pool_create_min
from .example_steps import step_sql_pool_show_min
from .example_steps import step_sql_pool_list_min
from .example_steps import step_sql_pool_list2_min
from .example_steps import step_sql_pool_pause_min
from .example_steps import step_sql_pool_rename_min
from .example_steps import step_sql_pool_resume_min
from .example_steps import step_sql_pool_update_min
from .example_steps import step_sql_pool_blob_auditing_policy_create_min
from .example_steps import step_sql_pool_blob_auditing_policy_create2_min
from .example_steps import step_sql_pool_blob_auditing_policy_show_min
from .example_steps import step_sql_pool_connection_policy_show_min
from .example_steps import step_sql_pool_data_warehouse_user_activity_show_min
from .example_steps import step_sql_pool_geo_backup_policy_show_min
from .example_steps import step_sql_pool_metadata_sync_config_create_min
from .example_steps import step_sql_pool_metadata_sync_config_show_min
from .example_steps import step_sql_pool_operation_min
from .example_steps import step_sql_pool_operation_list_min
from .example_steps import step_sql_pool_replication_link_list_min
from .example_steps import step_sql_pool_restore_point_list_min
from .example_steps import step_sql_pool_restore_point_create_min
from .example_steps import step_sql_pool_schema_list_min
from .example_steps import step_sql_pool_security_alert_policy_update_min
from .example_steps import step_sql_pool_security_alert_policy_show_min
from .example_steps import step_sql_pool_sensitivity_label_create_min
from .example_steps import step_sql_pool_sensitivity_label_list_current_min
from .example_steps import step_sql_pool_sensitivity_label_list_recommended_min
from .example_steps import step_sql_pool_sensitivity_min
from .example_steps import step_sql_pool_sensitivity2_min
from .example_steps import step_sql_pool_table_column_list_min
from .example_steps import step_sql_pool_table_list_min
from .example_steps import step_sql_pool_transparent_data_encryption_create_min
from .example_steps import step_sql_pool_transparent_data_encryption_show_min
from .example_steps import step_sql_pool_usage_list_min
from .example_steps import step_sql_pool_vulnerability_min
from .example_steps import step_sql_pool_vulnerability_assessment_scan_list_min
from .example_steps import step_sql_pool_vulnerability3_min
from .example_steps import step_sql_pool_vulnerability_assessment_scan_export_min
from .example_steps import step_sql_pool_vulnerability_assessment_create_min
from .example_steps import step_sql_pool_vulnerability_assessment_create2_min
from .example_steps import step_sql_pool_vulnerability_assessment_create3_min
from .example_steps import step_sql_pool_vulnerability_assessment_show_min
from .example_steps import step_sql_pool_vulnerability_assessment_list_min
from .example_steps import step_sql_pool_sensitivity_label_delete_min
from .example_steps import step_workspace_aad_admin_create_min
from .example_steps import step_workspace_aad_admin_show_min
from .example_steps import step_workspace_managed_identity_min
from .example_steps import step_workspace_managed_identity2_min
from .example_steps import step_big_data_pool_delete_min
from .example_steps import step_integration_runtime_node_delete_min
from .example_steps import step_integration_runtime_delete_min
from .example_steps import step_ip_firewall_rule_delete_min
from .example_steps import step_private_endpoint_connection_delete_min
from .example_steps import step_sql_pool_vulnerability2_min
from .example_steps import step_private_link_hub_delete_min
from .example_steps import step_sql_pool_vulnerability_assessment_delete_min
from .example_steps import step_sql_pool_delete_min
from .example_steps import step_workspace_aad_admin_delete_min
from .example_steps import step_workspace_delete_min
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15,
                   rg_16, rg_17):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                     rg_15, rg_16, rg_17):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15,
                  rg_16, rg_17):
    setup_scenario(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15,
                   rg_16, rg_17)
    step_workspace_create(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                          rg_15, rg_16, rg_17, checks=[
        test.check("identity.type", "SystemAssigned", case_sensitive=False),
        test.check("location", "East US", case_sensitive=False),
        test.check("defaultDataLakeStorage.accountUrl", "https://accountname.dfs.core.windows.net",
                   case_sensitive=False),
        test.check("defaultDataLakeStorage.filesystem", "default", case_sensitive=False),
        test.check("managedResourceGroupName", "workspaceManagedResourceGroupUnique", case_sensitive=False),
        test.check("managedVirtualNetwork", "default", case_sensitive=False),
        test.check("sqlAdministratorLogin", "login", case_sensitive=False),
        test.check("sqlAdministratorLoginPassword", "password", case_sensitive=False),
        test.check("tags.key", "value", case_sensitive=False),
        test.check("name", "{myWorkspace2}", case_sensitive=False),
    ])
    step_big_data_pool_create(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                              rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "West US 2", case_sensitive=False),
        test.check("autoPause.delayInMinutes", 15),
        test.check("autoPause.enabled", True),
        test.check("autoScale.enabled", True),
        test.check("autoScale.maxNodeCount", 50),
        test.check("autoScale.minNodeCount", 3),
        test.check("defaultSparkLogFolder", "/logs", case_sensitive=False),
        test.check("nodeCount", 4),
        test.check("nodeSize", "Medium", case_sensitive=False),
        test.check("nodeSizeFamily", "MemoryOptimized", case_sensitive=False),
        test.check("sparkEventsFolder", "/events", case_sensitive=False),
        test.check("sparkVersion", "2.4", case_sensitive=False),
        test.check("tags.key", "value", case_sensitive=False),
        test.check("name", "{myBigDataPool}", case_sensitive=False),
    ])
    step_big_data_pool_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                            rg_14, rg_15, rg_16, rg_17, checks=[
        test.check('length(@)', 1),
    ])
    step_big_data_pool_update(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                              rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "West US 2", case_sensitive=False),
        test.check("autoPause.delayInMinutes", 15),
        test.check("autoPause.enabled", True),
        test.check("autoScale.enabled", True),
        test.check("autoScale.maxNodeCount", 50),
        test.check("autoScale.minNodeCount", 3),
        test.check("defaultSparkLogFolder", "/logs", case_sensitive=False),
        test.check("nodeCount", 4),
        test.check("nodeSize", "Medium", case_sensitive=False),
        test.check("nodeSizeFamily", "MemoryOptimized", case_sensitive=False),
        test.check("sparkEventsFolder", "/events", case_sensitive=False),
        test.check("sparkVersion", "2.4", case_sensitive=False),
        test.check("tags.key", "value", case_sensitive=False),
        test.check("name", "{myBigDataPool}", case_sensitive=False),
    ])
    step_integration_runtime_create(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                    rg_13, rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("properties.type", "SelfHosted", case_sensitive=False),
        test.check("properties.description", "A selfhosted integration runtime", case_sensitive=False),
        test.check("name", "{myIntegrationRuntime}", case_sensitive=False),
    ])
    step_integration_runtime_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                  rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("properties.type", "SelfHosted", case_sensitive=False),
        test.check("properties.description", "A selfhosted integration runtime", case_sensitive=False),
        test.check("name", "{myIntegrationRuntime}", case_sensitive=False),
    ])
    step_integration_runtime_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                  rg_14, rg_15, rg_16, rg_17, checks=[
        test.check('length(@)', 1),
    ])
    step_integration_runtime_start(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                   rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_stop(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                  rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_upgrade(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                     rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_update(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                    rg_13, rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("name", "{myIntegrationRuntime}", case_sensitive=False),
    ])
    step_integration_runtime_auth_key_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                           rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_auth_key_regenerate(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                 rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_connection_info_get(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                 rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_credentials_sync(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                              rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_monitoring_data_get(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                 rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_node_ip_address_get(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                 rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_node_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                       rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_node_update(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                         rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_object_metadata_get(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                 rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_object_metadata_refresh(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                     rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_status_get(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                        rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_ip_firewall_rule_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                               rg_14, rg_15, rg_16, rg_17, checks=[])
    step_ip_firewall_rule_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                               rg_14, rg_15, rg_16, rg_17, checks=[])
    step_ip_firewall_rule_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                               rg_14, rg_15, rg_16, rg_17, checks=[])
    step_ip_firewall_rule_replace_all(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                      rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_operation_show_azure_async_header_result(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                  rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_operation_show_location_header_result(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                               rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_private_endpoint_connection_create(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                            rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_private_endpoint_connection_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                          rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_private_endpoint_connection_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                          rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[
        test.check('length(@)', 1),
    ])
    step_private_link_hub_create(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                 rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "East US", case_sensitive=False),
        test.check("tags.key", "value", case_sensitive=False),
        test.check("name", "{myPrivateLinkHub}", case_sensitive=False),
    ])
    step_private_link_hub_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                               rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "East US", case_sensitive=False),
        test.check("tags.key", "value", case_sensitive=False),
        test.check("name", "{myPrivateLinkHub}", case_sensitive=False),
    ])
    step_private_link_hub_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                               rg_14, rg_15, rg_16, rg_17, checks=[
        test.check('length(@)', 1),
    ])
    step_private_link_hub_list2(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                rg_14, rg_15, rg_16, rg_17, checks=[
        test.check('length(@)', 1),
    ])
    step_private_link_hub_update(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                 rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "East US", case_sensitive=False),
        test.check("tags.key", "value", case_sensitive=False),
        test.check("name", "{myPrivateLinkHub}", case_sensitive=False),
    ])
    step_big_data_pool_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                            rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "West US 2", case_sensitive=False),
        test.check("autoPause.delayInMinutes", 15),
        test.check("autoPause.enabled", True),
        test.check("autoScale.enabled", True),
        test.check("autoScale.maxNodeCount", 50),
        test.check("autoScale.minNodeCount", 3),
        test.check("defaultSparkLogFolder", "/logs", case_sensitive=False),
        test.check("nodeCount", 4),
        test.check("nodeSize", "Medium", case_sensitive=False),
        test.check("nodeSizeFamily", "MemoryOptimized", case_sensitive=False),
        test.check("sparkEventsFolder", "/events", case_sensitive=False),
        test.check("sparkVersion", "2.4", case_sensitive=False),
        test.check("name", "{myBigDataPool}", case_sensitive=False),
    ])
    step_workspace_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                        rg_15, rg_16, rg_17, checks=[
        test.check("location", "East US", case_sensitive=False),
        test.check("defaultDataLakeStorage.accountUrl", "https://accountname.dfs.core.windows.net",
                   case_sensitive=False),
        test.check("defaultDataLakeStorage.filesystem", "default", case_sensitive=False),
        test.check("sqlAdministratorLogin", "login", case_sensitive=False),
        test.check("sqlAdministratorLoginPassword", "password", case_sensitive=False),
        test.check("tags.key", "value", case_sensitive=False),
        test.check("name", "{myWorkspace2}", case_sensitive=False),
    ])
    step_workspace_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                        rg_15, rg_16, rg_17, checks=[
        test.check('length(@)', 1),
    ])
    step_workspace_list2(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                         rg_15, rg_16, rg_17, checks=[
        test.check('length(@)', 1),
    ])
    step_workspace_update(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                          rg_15, rg_16, rg_17, checks=[
        test.check("location", "East US", case_sensitive=False),
        test.check("defaultDataLakeStorage.accountUrl", "https://accountname.dfs.core.windows.net",
                   case_sensitive=False),
        test.check("defaultDataLakeStorage.filesystem", "default", case_sensitive=False),
        test.check("sqlAdministratorLogin", "login", case_sensitive=False),
        test.check("sqlAdministratorLoginPassword", "password", case_sensitive=False),
        test.check("tags.key", "value", case_sensitive=False),
        test.check("name", "{myWorkspace2}", case_sensitive=False),
    ])
    step_private_link_resource_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                    rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_private_link_resource_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                    rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_create(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                         rg_15, rg_16, rg_17, checks=[
        test.check("location", "West US 2", case_sensitive=False),
        test.check("collation", "", case_sensitive=False),
        test.check("createMode", "", case_sensitive=False),
        test.check("creationDate", "1970-01-01T00:00:00.000Z", case_sensitive=False),
        test.check("maxSizeBytes", 0),
        test.check("recoverableDatabaseId", "", case_sensitive=False),
        test.check("restorePointInTime", "1970-01-01T00:00:00.000Z", case_sensitive=False),
        test.check("sourceDatabaseId", "", case_sensitive=False),
        test.check("sku.name", "", case_sensitive=False),
        test.check("sku.tier", "", case_sensitive=False),
        test.check("name", "{mySqlPool2}", case_sensitive=False),
    ])
    step_sql_pool_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                       rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                       rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_list2(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                        rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_pause(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                        rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_rename(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                         rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_resume(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                         rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_update(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                         rg_15, rg_16, rg_17, checks=[
        test.check("location", "West US 2", case_sensitive=False),
        test.check("collation", "", case_sensitive=False),
        test.check("createMode", "", case_sensitive=False),
        test.check("creationDate", "1970-01-01T00:00:00.000Z", case_sensitive=False),
        test.check("maxSizeBytes", 0),
        test.check("recoverableDatabaseId", "", case_sensitive=False),
        test.check("restorePointInTime", "1970-01-01T00:00:00.000Z", case_sensitive=False),
        test.check("sourceDatabaseId", "", case_sensitive=False),
        test.check("sku.name", "", case_sensitive=False),
        test.check("sku.tier", "", case_sensitive=False),
        test.check("name", "{mySqlPool2}", case_sensitive=False),
    ])
    step_sql_pool_blob_auditing_policy_create(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                              rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_blob_auditing_policy_create2(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                               rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_blob_auditing_policy_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                            rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_connection_policy_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                         rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_data_warehouse_user_activity_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                    rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_geo_backup_policy_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                         rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_metadata_sync_config_create(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                              rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_metadata_sync_config_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                            rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_operation(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                            rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_operation_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                 rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_replication_link_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                        rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_restore_point_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                     rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_restore_point_create(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                       rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_schema_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                              rg_14, rg_15, rg_16, rg_17, checks=[])
    # STEP NOT FOUND: Update a Sql pool's threat detection policy with all parameters
    step_sql_pool_security_alert_policy_update(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                               rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_security_alert_policy_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                             rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_sensitivity_label_create(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                           rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_sensitivity_label_list_current(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                 rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_sensitivity_label_list_recommended(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                     rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_sensitivity(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                              rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_sensitivity2(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                               rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_table_column_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                    rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_table_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                             rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_transparent_data_encryption_create(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                     rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_transparent_data_encryption_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                   rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_usage_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                             rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_assessment_scan_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                     rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability3(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                 rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_assessment_scan_export(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                       rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_assessment_create(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                  rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_assessment_create2(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                   rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_assessment_create3(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                   rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_assessment_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                                rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_assessment_list(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                                rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_sensitivity_label_delete(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                           rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_workspace_aad_admin_create(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                    rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_workspace_aad_admin_show(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                  rg_14, rg_15, rg_16, rg_17, checks=[])
    step_workspace_managed_identity(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                    rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_workspace_managed_identity2(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                     rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_big_data_pool_delete(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                              rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_node_delete(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                         rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_delete(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                    rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_ip_firewall_rule_delete(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                 rg_14, rg_15, rg_16, rg_17, checks=[])
    step_private_endpoint_connection_delete(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                            rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability2(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                 rg_14, rg_15, rg_16, rg_17, checks=[])
    step_private_link_hub_delete(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                 rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_assessment_delete(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                  rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_delete(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                         rg_15, rg_16, rg_17, checks=[])
    step_workspace_aad_admin_delete(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                    rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_workspace_delete(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                          rg_15, rg_16, rg_17, checks=[])
    cleanup_scenario(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                     rg_15, rg_16, rg_17)


@try_manual
def call_scenario_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                      rg_15, rg_16, rg_17):
    setup_scenario(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15,
                   rg_16, rg_17)
    step_workspace_create_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                              rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "East US", case_sensitive=False),
        test.check("name", "{myWorkspace2}", case_sensitive=False),
    ])
    step_big_data_pool_create_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                  rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "West US 2", case_sensitive=False),
        test.check("name", "{myBigDataPool}", case_sensitive=False),
    ])
    step_big_data_pool_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                rg_14, rg_15, rg_16, rg_17, checks=[
        test.check('length(@)', 1),
    ])
    step_big_data_pool_update_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                  rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "West US 2", case_sensitive=False),
        test.check("name", "{myBigDataPool}", case_sensitive=False),
    ])
    step_integration_runtime_create_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                        rg_13, rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("properties.type", "SelfHosted", case_sensitive=False),
        test.check("properties.description", "A selfhosted integration runtime", case_sensitive=False),
        test.check("name", "{myIntegrationRuntime}", case_sensitive=False),
    ])
    step_integration_runtime_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                      rg_13, rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("properties.type", "SelfHosted", case_sensitive=False),
        test.check("properties.description", "A selfhosted integration runtime", case_sensitive=False),
        test.check("name", "{myIntegrationRuntime}", case_sensitive=False),
    ])
    step_integration_runtime_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                      rg_13, rg_14, rg_15, rg_16, rg_17, checks=[
        test.check('length(@)', 1),
    ])
    step_integration_runtime_start_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                       rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_stop_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                      rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_upgrade_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                         rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_update_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                        rg_13, rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("name", "{myIntegrationRuntime}", case_sensitive=False),
    ])
    step_integration_runtime_auth_key_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                               rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_auth_key_regenerate_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                     rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_connection_info_get_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                     rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_credentials_sync_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                  rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_monitoring_data_get_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                     rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_node_ip_address_get_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                     rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_node_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                           rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_node_update_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                             rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_object_metadata_get_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                     rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_object_metadata_refresh_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9,
                                                         rg_10, rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17,
                                                         checks=[])
    step_integration_runtime_status_get_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                            rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_ip_firewall_rule_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                   rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_ip_firewall_rule_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                   rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_ip_firewall_rule_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                   rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_ip_firewall_rule_replace_all_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                          rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_operation_show_azure_async_header_result_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                      rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_operation_show_location_header_result_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                   rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_private_endpoint_connection_create_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                                rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_private_endpoint_connection_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                              rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_private_endpoint_connection_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                              rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[
        test.check('length(@)', 1),
    ])
    step_private_link_hub_create_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                     rg_13, rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "East US", case_sensitive=False),
        test.check("name", "{myPrivateLinkHub}", case_sensitive=False),
    ])
    step_private_link_hub_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                   rg_13, rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "East US", case_sensitive=False),
        test.check("name", "{myPrivateLinkHub}", case_sensitive=False),
    ])
    step_private_link_hub_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                   rg_13, rg_14, rg_15, rg_16, rg_17, checks=[
        test.check('length(@)', 1),
    ])
    step_private_link_hub_list2_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                    rg_13, rg_14, rg_15, rg_16, rg_17, checks=[
        test.check('length(@)', 1),
    ])
    step_private_link_hub_update_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                     rg_13, rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "East US", case_sensitive=False),
        test.check("name", "{myPrivateLinkHub}", case_sensitive=False),
    ])
    step_big_data_pool_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "West US 2", case_sensitive=False),
        test.check("name", "{myBigDataPool}", case_sensitive=False),
    ])
    step_workspace_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                            rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "East US", case_sensitive=False),
        test.check("name", "{myWorkspace2}", case_sensitive=False),
    ])
    step_workspace_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                            rg_14, rg_15, rg_16, rg_17, checks=[
        test.check('length(@)', 1),
    ])
    step_workspace_list2_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                             rg_14, rg_15, rg_16, rg_17, checks=[
        test.check('length(@)', 1),
    ])
    step_workspace_update_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                              rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "East US", case_sensitive=False),
        test.check("name", "{myWorkspace2}", case_sensitive=False),
    ])
    step_private_link_resource_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                        rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_private_link_resource_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                        rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_create_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                             rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "West US 2", case_sensitive=False),
        test.check("name", "{mySqlPool2}", case_sensitive=False),
    ])
    step_sql_pool_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                           rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                           rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_list2_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                            rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_pause_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                            rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_rename_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                             rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_resume_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                             rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_update_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                             rg_14, rg_15, rg_16, rg_17, checks=[
        test.check("location", "West US 2", case_sensitive=False),
        test.check("name", "{mySqlPool2}", case_sensitive=False),
    ])
    step_sql_pool_blob_auditing_policy_create_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                  rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_blob_auditing_policy_create2_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                   rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_blob_auditing_policy_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                                rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_connection_policy_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                             rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_data_warehouse_user_activity_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9,
                                                        rg_10, rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17,
                                                        checks=[])
    step_sql_pool_geo_backup_policy_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                             rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_metadata_sync_config_create_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                  rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_metadata_sync_config_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                                rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_operation_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_operation_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                     rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_replication_link_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                            rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_restore_point_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                         rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_restore_point_create_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                           rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_schema_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                  rg_14, rg_15, rg_16, rg_17, checks=[])
    # STEP NOT FOUND: Update a Sql pool's threat detection policy with all parameters
    step_sql_pool_security_alert_policy_update_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                   rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_security_alert_policy_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                 rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_sensitivity_label_create_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                               rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_sensitivity_label_list_current_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                     rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_sensitivity_label_list_recommended_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9,
                                                         rg_10, rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17,
                                                         checks=[])
    step_sql_pool_sensitivity_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                  rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_sensitivity2_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                   rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_table_column_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                        rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_table_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                 rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_transparent_data_encryption_create_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9,
                                                         rg_10, rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17,
                                                         checks=[])
    step_sql_pool_transparent_data_encryption_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                       rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_usage_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                 rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                    rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_assessment_scan_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9,
                                                         rg_10, rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17,
                                                         checks=[])
    step_sql_pool_vulnerability3_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                     rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_assessment_scan_export_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9,
                                                           rg_10, rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17,
                                                           checks=[])
    step_sql_pool_vulnerability_assessment_create_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                      rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_assessment_create2_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                       rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_assessment_create3_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                       rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_assessment_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                    rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_assessment_list_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                    rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_sensitivity_label_delete_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                               rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_workspace_aad_admin_create_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                        rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_workspace_aad_admin_show_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                      rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_workspace_managed_identity_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                        rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_workspace_managed_identity2_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                         rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_big_data_pool_delete_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                  rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_node_delete_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                             rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_integration_runtime_delete_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                        rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_ip_firewall_rule_delete_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                     rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_private_endpoint_connection_delete_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11,
                                                rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability2_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                     rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_private_link_hub_delete_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                     rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_vulnerability_assessment_delete_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10,
                                                      rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_sql_pool_delete_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                             rg_14, rg_15, rg_16, rg_17, checks=[])
    step_workspace_aad_admin_delete_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12,
                                        rg_13, rg_14, rg_15, rg_16, rg_17, checks=[])
    step_workspace_delete_min(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                              rg_14, rg_15, rg_16, rg_17, checks=[])
    cleanup_scenario(test, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14,
                     rg_15, rg_16, rg_17)


# Test class for Scenario
@try_manual
class SynapseScenarioTest(ScenarioTest):

    def __init__(self):
        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'myWorkspace5': 'testsvr',
            'myWorkspace': 'ExampleWorkspace',
            'myWorkspace2': 'workspace1',
            'myWorkspace3': 'sqlcrudtest-7177',
            'myWorkspace4': 'sqlcrudtest-2080',
            'myWorkspace6': 'sqlcrudtest-5961',
            'myWorkspace7': 'testserver',
            'myWorkspace8': 'sqlcrudtest-6440',
            'myWorkspace9': 'blobauditingtest-2080',
            'myWorkspace10': 'blobauditingtest-6440',
            'myWorkspace11': 'sqlcrudtest-4645',
            'myWorkspace12': 'sqlcrudtest-9007',
            'myWorkspace13': 'myServer',
            'myWorkspace14': 'serverName',
            'myWorkspace15': 'vulnerabilityaseessmenttest-6440',
            'myWorkspace16': 'vulnerabilityassessmenttest-6411',
            'myWorkspace17': 'vulnerabilityassessmenttest-6440',
            'myWorkspace18': 'securityalert-2080',
            'myWorkspace19': 'securityalert-6440',
            'myWorkspace20': 'exampleWorkspace',
            'myIntegrationRuntime': 'exampleIntegrationRuntime',
            'myIntegrationRuntime2': 'exampleManagedIntegrationRuntime',
            'myIntegrationRuntime3': 'testactivityv2',
            'myPrivateLinkResource': 'sql',
            'myPrivateEndpointConnection': 'ExamplePrivateEndpointConnection',
            'myPrivateLinkHub': 'privateLinkHub1',
            'myBigDataPool': 'ExamplePool',
            'mySqlPool4': 'newtestdb',
            'mySqlPool8': '3481',
            'mySqlPool': 'sqlcrudtest-9187',
            'mySqlPool2': 'ExampleSqlPool',
            'mySqlPool3': 'testdwdb',
            'mySqlPool5': 'testdb',
            'mySqlPool6': 'testdw',
            'mySqlPool7': 'testDatabase',
            'mySqlPool9': 'myDatabase',
        })


    @ResourceGroupPreparer(name_prefix='clitestsynapse_Default-SQL-SouthEastAsia'[:7], key='rg_5',
                           parameter_name='rg_5')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_ExampleResourceGroup'[:7], key='rg', parameter_name='rg')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_resourceGroup1'[:7], key='rg_2', parameter_name='rg_2')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_sqlcrudtest-6845'[:7], key='rg_3', parameter_name='rg_3')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_sqlcrudtest-6852'[:7], key='rg_4', parameter_name='rg_4')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_sqlcrudtest-4799'[:7], key='rg_6', parameter_name='rg_6')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_blobauditingtest-6852'[:7], key='rg_7', parameter_name='rg_7')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_blobauditingtest-4799'[:7], key='rg_8', parameter_name='rg_8')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_sqlcrudtest-7398'[:7], key='rg_9', parameter_name='rg_9')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_sqlcrudtest-6730'[:7], key='rg_10', parameter_name='rg_10')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_myRG'[:7], key='rg_11', parameter_name='rg_11')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_vulnerabilityaseessmenttest-4799'[:7], key='rg_12',
                           parameter_name='rg_12')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_vulnerabilityassessmenttest-4711'[:7], key='rg_13',
                           parameter_name='rg_13')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_vulnerabilityassessmenttest-4799'[:7], key='rg_14',
                           parameter_name='rg_14')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_securityalert-6852'[:7], key='rg_15', parameter_name='rg_15')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_securityalert-4799'[:7], key='rg_16', parameter_name='rg_16')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_exampleResourceGroup'[:7], key='rg_17', parameter_name='rg_17')
    def test_synapse_Scenario(self, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                              rg_14, rg_15, rg_16, rg_17):
        call_scenario(self, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17)
        calc_coverage(__file__)
        raise_if()


    @ResourceGroupPreparer(name_prefix='clitestsynapse_Default-SQL-SouthEastAsia'[:7], key='rg_5',
                           parameter_name='rg_5')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_ExampleResourceGroup'[:7], key='rg', parameter_name='rg')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_resourceGroup1'[:7], key='rg_2', parameter_name='rg_2')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_sqlcrudtest-6845'[:7], key='rg_3', parameter_name='rg_3')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_sqlcrudtest-6852'[:7], key='rg_4', parameter_name='rg_4')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_sqlcrudtest-4799'[:7], key='rg_6', parameter_name='rg_6')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_blobauditingtest-6852'[:7], key='rg_7', parameter_name='rg_7')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_blobauditingtest-4799'[:7], key='rg_8', parameter_name='rg_8')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_sqlcrudtest-7398'[:7], key='rg_9', parameter_name='rg_9')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_sqlcrudtest-6730'[:7], key='rg_10', parameter_name='rg_10')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_myRG'[:7], key='rg_11', parameter_name='rg_11')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_vulnerabilityaseessmenttest-4799'[:7], key='rg_12',
                           parameter_name='rg_12')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_vulnerabilityassessmenttest-4711'[:7], key='rg_13',
                           parameter_name='rg_13')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_vulnerabilityassessmenttest-4799'[:7], key='rg_14',
                           parameter_name='rg_14')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_securityalert-6852'[:7], key='rg_15', parameter_name='rg_15')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_securityalert-4799'[:7], key='rg_16', parameter_name='rg_16')
    @ResourceGroupPreparer(name_prefix='clitestsynapse_exampleResourceGroup'[:7], key='rg_17', parameter_name='rg_17')
    def test_synapse_Scenario_min(self, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13,
                                  rg_14, rg_15, rg_16, rg_17):
        call_scenario_min(self, rg_5, rg, rg_2, rg_3, rg_4, rg_6, rg_7, rg_8, rg_9, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15, rg_16, rg_17)
        calc_coverage(__file__)
        raise_if()

