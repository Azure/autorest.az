# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Optional, TYPE_CHECKING

from azure.mgmt.core import AsyncARMPipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from azure.core.credentials_async import AsyncTokenCredential

from ._configuration import SynapseManagementClientConfiguration
from .operations import BigDataPoolOperations
from .operations import OperationOperations
from .operations import IpFirewallRuleOperations
from .operations import SQLPoolOperations
from .operations import SQLPoolMetadataSyncConfigOperations
from .operations import SQLPoolOperationResultOperations
from .operations import SQLPoolGeoBackupPolicyOperations
from .operations import SQLPoolDataWarehouseUserActivityOperations
from .operations import SQLPoolRestorePointOperations
from .operations import SQLPoolReplicationLinkOperations
from .operations import SQLPoolTransparentDataEncryptionOperations
from .operations import SQLPoolBlobAuditingPolicyOperations
from .operations import SQLPoolOperationOperations
from .operations import SQLPoolUsageOperations
from .operations import SQLPoolSensitivityLabelOperations
from .operations import SQLPoolSchemaOperations
from .operations import SQLPoolTableOperations
from .operations import SQLPoolTableColumnOperations
from .operations import SQLPoolConnectionPolicyOperations
from .operations import SQLPoolVulnerabilityAssessmentOperations
from .operations import SQLPoolVulnerabilityAssessmentScanOperations
from .operations import SQLPoolSecurityAlertPolicyOperations
from .operations import SQLPoolVulnerabilityAssessmentRuleBaselineOperations
from .operations import WorkspaceOperations
from .operations import WorkspaceAADAdminOperations
from .operations import WorkspaceManagedIdentitySQLControlSettingOperations
from .operations import IntegrationRuntimeOperations
from .operations import IntegrationRuntimeNodeIpAddressOperations
from .operations import IntegrationRuntimeObjectMetadataOperations
from .operations import IntegrationRuntimeNodeOperations
from .operations import IntegrationRuntimeCredentialsOperations
from .operations import IntegrationRuntimeConnectionInfoOperations
from .operations import IntegrationRuntimeAuthKeyOperations
from .operations import IntegrationRuntimeMonitoringDataOperations
from .operations import IntegrationRuntimeStatusOperations
from .operations import PrivateLinkResourceOperations
from .operations import PrivateEndpointConnectionOperations
from .operations import PrivateLinkHubOperations
from .. import models


class SynapseManagementClient(object):
    """Azure Synapse Analytics Management Client.

    :ivar big_data_pool: BigDataPoolOperations operations
    :vartype big_data_pool: synapse_management_client.aio.operations.BigDataPoolOperations
    :ivar operation: OperationOperations operations
    :vartype operation: synapse_management_client.aio.operations.OperationOperations
    :ivar ip_firewall_rule: IpFirewallRuleOperations operations
    :vartype ip_firewall_rule: synapse_management_client.aio.operations.IpFirewallRuleOperations
    :ivar sql_pool: SQLPoolOperations operations
    :vartype sql_pool: synapse_management_client.aio.operations.SQLPoolOperations
    :ivar sql_pool_metadata_sync_config: SQLPoolMetadataSyncConfigOperations operations
    :vartype sql_pool_metadata_sync_config: synapse_management_client.aio.operations.SQLPoolMetadataSyncConfigOperations
    :ivar sql_pool_operation_result: SQLPoolOperationResultOperations operations
    :vartype sql_pool_operation_result: synapse_management_client.aio.operations.SQLPoolOperationResultOperations
    :ivar sql_pool_geo_backup_policy: SQLPoolGeoBackupPolicyOperations operations
    :vartype sql_pool_geo_backup_policy: synapse_management_client.aio.operations.SQLPoolGeoBackupPolicyOperations
    :ivar sql_pool_data_warehouse_user_activity: SQLPoolDataWarehouseUserActivityOperations operations
    :vartype sql_pool_data_warehouse_user_activity: synapse_management_client.aio.operations.SQLPoolDataWarehouseUserActivityOperations
    :ivar sql_pool_restore_point: SQLPoolRestorePointOperations operations
    :vartype sql_pool_restore_point: synapse_management_client.aio.operations.SQLPoolRestorePointOperations
    :ivar sql_pool_replication_link: SQLPoolReplicationLinkOperations operations
    :vartype sql_pool_replication_link: synapse_management_client.aio.operations.SQLPoolReplicationLinkOperations
    :ivar sql_pool_transparent_data_encryption: SQLPoolTransparentDataEncryptionOperations operations
    :vartype sql_pool_transparent_data_encryption: synapse_management_client.aio.operations.SQLPoolTransparentDataEncryptionOperations
    :ivar sql_pool_blob_auditing_policy: SQLPoolBlobAuditingPolicyOperations operations
    :vartype sql_pool_blob_auditing_policy: synapse_management_client.aio.operations.SQLPoolBlobAuditingPolicyOperations
    :ivar sql_pool_operation: SQLPoolOperationOperations operations
    :vartype sql_pool_operation: synapse_management_client.aio.operations.SQLPoolOperationOperations
    :ivar sql_pool_usage: SQLPoolUsageOperations operations
    :vartype sql_pool_usage: synapse_management_client.aio.operations.SQLPoolUsageOperations
    :ivar sql_pool_sensitivity_label: SQLPoolSensitivityLabelOperations operations
    :vartype sql_pool_sensitivity_label: synapse_management_client.aio.operations.SQLPoolSensitivityLabelOperations
    :ivar sql_pool_schema: SQLPoolSchemaOperations operations
    :vartype sql_pool_schema: synapse_management_client.aio.operations.SQLPoolSchemaOperations
    :ivar sql_pool_table: SQLPoolTableOperations operations
    :vartype sql_pool_table: synapse_management_client.aio.operations.SQLPoolTableOperations
    :ivar sql_pool_table_column: SQLPoolTableColumnOperations operations
    :vartype sql_pool_table_column: synapse_management_client.aio.operations.SQLPoolTableColumnOperations
    :ivar sql_pool_connection_policy: SQLPoolConnectionPolicyOperations operations
    :vartype sql_pool_connection_policy: synapse_management_client.aio.operations.SQLPoolConnectionPolicyOperations
    :ivar sql_pool_vulnerability_assessment: SQLPoolVulnerabilityAssessmentOperations operations
    :vartype sql_pool_vulnerability_assessment: synapse_management_client.aio.operations.SQLPoolVulnerabilityAssessmentOperations
    :ivar sql_pool_vulnerability_assessment_scan: SQLPoolVulnerabilityAssessmentScanOperations operations
    :vartype sql_pool_vulnerability_assessment_scan: synapse_management_client.aio.operations.SQLPoolVulnerabilityAssessmentScanOperations
    :ivar sql_pool_security_alert_policy: SQLPoolSecurityAlertPolicyOperations operations
    :vartype sql_pool_security_alert_policy: synapse_management_client.aio.operations.SQLPoolSecurityAlertPolicyOperations
    :ivar sql_pool_vulnerability_assessment_rule_baseline: SQLPoolVulnerabilityAssessmentRuleBaselineOperations operations
    :vartype sql_pool_vulnerability_assessment_rule_baseline: synapse_management_client.aio.operations.SQLPoolVulnerabilityAssessmentRuleBaselineOperations
    :ivar workspace: WorkspaceOperations operations
    :vartype workspace: synapse_management_client.aio.operations.WorkspaceOperations
    :ivar workspace_aad_admin: WorkspaceAADAdminOperations operations
    :vartype workspace_aad_admin: synapse_management_client.aio.operations.WorkspaceAADAdminOperations
    :ivar workspace_managed_identity_sql_control_setting: WorkspaceManagedIdentitySQLControlSettingOperations operations
    :vartype workspace_managed_identity_sql_control_setting: synapse_management_client.aio.operations.WorkspaceManagedIdentitySQLControlSettingOperations
    :ivar integration_runtime: IntegrationRuntimeOperations operations
    :vartype integration_runtime: synapse_management_client.aio.operations.IntegrationRuntimeOperations
    :ivar integration_runtime_node_ip_address: IntegrationRuntimeNodeIpAddressOperations operations
    :vartype integration_runtime_node_ip_address: synapse_management_client.aio.operations.IntegrationRuntimeNodeIpAddressOperations
    :ivar integration_runtime_object_metadata: IntegrationRuntimeObjectMetadataOperations operations
    :vartype integration_runtime_object_metadata: synapse_management_client.aio.operations.IntegrationRuntimeObjectMetadataOperations
    :ivar integration_runtime_node: IntegrationRuntimeNodeOperations operations
    :vartype integration_runtime_node: synapse_management_client.aio.operations.IntegrationRuntimeNodeOperations
    :ivar integration_runtime_credentials: IntegrationRuntimeCredentialsOperations operations
    :vartype integration_runtime_credentials: synapse_management_client.aio.operations.IntegrationRuntimeCredentialsOperations
    :ivar integration_runtime_connection_info: IntegrationRuntimeConnectionInfoOperations operations
    :vartype integration_runtime_connection_info: synapse_management_client.aio.operations.IntegrationRuntimeConnectionInfoOperations
    :ivar integration_runtime_auth_key: IntegrationRuntimeAuthKeyOperations operations
    :vartype integration_runtime_auth_key: synapse_management_client.aio.operations.IntegrationRuntimeAuthKeyOperations
    :ivar integration_runtime_monitoring_data: IntegrationRuntimeMonitoringDataOperations operations
    :vartype integration_runtime_monitoring_data: synapse_management_client.aio.operations.IntegrationRuntimeMonitoringDataOperations
    :ivar integration_runtime_status: IntegrationRuntimeStatusOperations operations
    :vartype integration_runtime_status: synapse_management_client.aio.operations.IntegrationRuntimeStatusOperations
    :ivar private_link_resource: PrivateLinkResourceOperations operations
    :vartype private_link_resource: synapse_management_client.aio.operations.PrivateLinkResourceOperations
    :ivar private_endpoint_connection: PrivateEndpointConnectionOperations operations
    :vartype private_endpoint_connection: synapse_management_client.aio.operations.PrivateEndpointConnectionOperations
    :ivar private_link_hub: PrivateLinkHubOperations operations
    :vartype private_link_hub: synapse_management_client.aio.operations.PrivateLinkHubOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials_async.AsyncTokenCredential
    :param subscription_id: The ID of the target subscription.
    :type subscription_id: str
    :param str base_url: Service URL
    :keyword int polling_interval: Default waiting time between two polls for LRO operations if no Retry-After header is present.
    """

    def __init__(
        self,
        credential: "AsyncTokenCredential",
        subscription_id: str,
        base_url: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        if not base_url:
            base_url = 'https://management.azure.com'
        self._config = SynapseManagementClientConfiguration(credential, subscription_id, **kwargs)
        self._client = AsyncARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._serialize.client_side_validation = False
        self._deserialize = Deserializer(client_models)

        self.big_data_pool = BigDataPoolOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.operation = OperationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.ip_firewall_rule = IpFirewallRuleOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool = SQLPoolOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_metadata_sync_config = SQLPoolMetadataSyncConfigOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_operation_result = SQLPoolOperationResultOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_geo_backup_policy = SQLPoolGeoBackupPolicyOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_data_warehouse_user_activity = SQLPoolDataWarehouseUserActivityOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_restore_point = SQLPoolRestorePointOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_replication_link = SQLPoolReplicationLinkOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_transparent_data_encryption = SQLPoolTransparentDataEncryptionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_blob_auditing_policy = SQLPoolBlobAuditingPolicyOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_operation = SQLPoolOperationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_usage = SQLPoolUsageOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_sensitivity_label = SQLPoolSensitivityLabelOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_schema = SQLPoolSchemaOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_table = SQLPoolTableOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_table_column = SQLPoolTableColumnOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_connection_policy = SQLPoolConnectionPolicyOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_vulnerability_assessment = SQLPoolVulnerabilityAssessmentOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_vulnerability_assessment_scan = SQLPoolVulnerabilityAssessmentScanOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_security_alert_policy = SQLPoolSecurityAlertPolicyOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sql_pool_vulnerability_assessment_rule_baseline = SQLPoolVulnerabilityAssessmentRuleBaselineOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.workspace = WorkspaceOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.workspace_aad_admin = WorkspaceAADAdminOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.workspace_managed_identity_sql_control_setting = WorkspaceManagedIdentitySQLControlSettingOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.integration_runtime = IntegrationRuntimeOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.integration_runtime_node_ip_address = IntegrationRuntimeNodeIpAddressOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.integration_runtime_object_metadata = IntegrationRuntimeObjectMetadataOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.integration_runtime_node = IntegrationRuntimeNodeOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.integration_runtime_credentials = IntegrationRuntimeCredentialsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.integration_runtime_connection_info = IntegrationRuntimeConnectionInfoOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.integration_runtime_auth_key = IntegrationRuntimeAuthKeyOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.integration_runtime_monitoring_data = IntegrationRuntimeMonitoringDataOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.integration_runtime_status = IntegrationRuntimeStatusOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.private_link_resource = PrivateLinkResourceOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.private_endpoint_connection = PrivateEndpointConnectionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.private_link_hub = PrivateLinkHubOperations(
            self._client, self._config, self._serialize, self._deserialize)

    async def close(self) -> None:
        await self._client.close()

    async def __aenter__(self) -> "SynapseManagementClient":
        await self._client.__aenter__()
        return self

    async def __aexit__(self, *exc_details) -> None:
        await self._client.__aexit__(*exc_details)
