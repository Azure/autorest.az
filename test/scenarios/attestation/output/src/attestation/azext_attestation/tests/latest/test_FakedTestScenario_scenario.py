# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from .example_steps import step_create_provider
from .example_steps import step_attestation_provider_update
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test, rg, rg_2, rg_3, rg_4):
    cmd = "az deployment group create --resource-group {{rg}} --template-file \"{}\"".format(os.path.join(TEST_DIR, 'depSto.json'))
    o = test.cmd(cmd).get_output_in_json()
    kwargs = {k: v.get("value") for k, v in o.get('properties', {}).get('outputs', {}).items()}
    test.kwargs.update(kwargs)


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test, rg, rg_2, rg_3, rg_4):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test, rg, rg_2, rg_3, rg_4):
    setup_scenario(test, rg, rg_2, rg_3, rg_4)
    step_create_provider(test, rg, rg_2, rg_3, rg_4, checks=[])
    step_attestation_provider_update(test, rg, rg_2, rg_3, rg_4, checks=[])
    cleanup_scenario(test, rg, rg_2, rg_3, rg_4)


# Test class for Scenario
@try_manual
class FakedTestScenarioScenarioTest(ScenarioTest):

    def __init__(self, *args, **kwargs):
        super(FakedTestScenarioScenarioTest, self).__init__(*args, **kwargs)


    @ResourceGroupPreparer(name_prefix='clitestattestation_MyResourceGroup'[:7], key='rg', parameter_name='rg')
    @ResourceGroupPreparer(name_prefix='clitestattestation_testrg1'[:7], key='rg_2', parameter_name='rg_2')
    @ResourceGroupPreparer(name_prefix='clitestattestation_sample-resource-group'[:7], key='rg_3',
                           parameter_name='rg_3')
    @ResourceGroupPreparer(name_prefix='clitestattestation_$(resourceGroupName)'[:7], key='rg_4',
                           parameter_name='rg_4')
    def test_FakedTestScenario_Scenario(self, rg, rg_2, rg_3, rg_4):
        call_scenario(self, rg, rg_2, rg_3, rg_4)
        calc_coverage(__file__)
        raise_if()

