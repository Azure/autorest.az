# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long

from azure.cli.testsdk import ScenarioTest
from azure.core.exceptions import ResourceNotFoundError


# Test class for Scenario
class NegativeTest(ScenarioTest):

    def __init__(self, *args, **kwargs):
        super(NegativeTest, self).__init__(*args, **kwargs)

    # EXAMPLE: /BigDataPools/get/List Big Data pools in a workspace
    def test_big_data_pool_list(self):
        try:
            self.cmd('az synapse big-data-pool list '
                     '--resource-group "ExampleResourceGroup" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /BigDataPools/get/Get a Big Data pool
    def test_big_data_pool_show(self):
        try:
            self.cmd('az synapse big-data-pool show '
                     '--name "ExamplePool" '
                     '--resource-group "ExampleResourceGroup" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /BigDataPools/put/Create or update a Big Data pool
    def test_big_data_pool_create(self):
        try:
            self.cmd('az synapse big-data-pool create '
                     '--location "West US 2" '
                     '--auto-pause delay-in-minutes=15 enabled=true '
                     '--auto-scale enabled=true max-node-count=50 min-node-count=3 '
                     '--default-spark-log-folder "/logs" '
                     '--library-requirements content="" filename="requirements.txt" '
                     '--node-count 4 '
                     '--node-size "Medium" '
                     '--node-size-family "MemoryOptimized" '
                     '--spark-events-folder "/events" '
                     '--spark-version "2.4" '
                     '--tags key="value" '
                     '--name "ExamplePool" '
                     '--resource-group "ExampleResourceGroup" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /BigDataPools/patch/Update a Big Data pool
    def test_big_data_pool_update(self):
        try:
            self.cmd('az synapse big-data-pool update '
                     '--name "ExamplePool" '
                     '--tags key="value" '
                     '--resource-group "ExampleResourceGroup" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /BigDataPools/delete/Delete a Big Data pool
    def test_big_data_pool_delete(self):
        try:
            self.cmd('az synapse big-data-pool delete -y '
                     '--name "ExamplePool" '
                     '--resource-group "ExampleResourceGroup" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /Operations/get/Get azure async operation header result
    def test_operation_show_azure_async_header_result(self):
        try:
            self.cmd('az synapse operation show-azure-async-header-result '
                     '--operation-id "01234567-89ab-4def-0123-456789abcdef" '
                     '--resource-group "resourceGroup1" '
                     '--workspace-name "workspace1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /Operations/get/Get location header result
    def test_operation_show_location_header_result(self):
        try:
            self.cmd('az synapse operation show-location-header-result '
                     '--operation-id "01234567-89ab-4def-0123-456789abcdef" '
                     '--resource-group "resourceGroup1" '
                     '--workspace-name "workspace1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IpFirewallRules/get/List IP firewall rules in a workspace
    def test_ip_firewall_rule_list(self):
        try:
            self.cmd('az synapse ip-firewall-rule list '
                     '--resource-group "ExampleResourceGroup" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IpFirewallRules/get/Create an IP firewall rule
    def test_ip_firewall_rule_show(self):
        try:
            self.cmd('az synapse ip-firewall-rule show '
                     '--resource-group "ExampleResourceGroup" '
                     '--rule-name "ExampleIpFirewallRule" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IpFirewallRules/put/Create an IP firewall rule
    def test_ip_firewall_rule_create(self):
        try:
            self.cmd('az synapse ip-firewall-rule create '
                     '--end-ip-address "10.0.0.254" '
                     '--start-ip-address "10.0.0.0" '
                     '--resource-group "ExampleResourceGroup" '
                     '--rule-name "ExampleIpFirewallRule" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IpFirewallRules/delete/Delete an IP firewall rule from a workspace
    def test_ip_firewall_rule_delete(self):
        try:
            self.cmd('az synapse ip-firewall-rule delete -y '
                     '--resource-group "ExampleResourceGroup" '
                     '--rule-name "ExampleIpFirewallRule" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IpFirewallRules/post/Replace all IP firewall rules in a workspace
    def test_ip_firewall_rule_replace_all(self):
        try:
            self.cmd('az synapse ip-firewall-rule replace-all '
                     '--resource-group "ExampleResourceGroup" '
                     '--workspace-name "ExampleWorkspace" '
                     '--ip-firewall-rules "{\\"AnotherExampleFirewallRule\\":{\\"endIpAddress\\":\\"10.0.1.254\\",\\"startIpAddress\\":\\"10.0.1.0\\"},\\"ExampleFirewallRule\\":{\\"endIpAddress\\":\\"10.0.0.254\\",\\"startIpAddress\\":\\"10.0.0.0\\"}}"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPools/get/List SQL Analytics pools in a workspace
    def test_sql_pool_list(self):
        try:
            self.cmd('az synapse sql-pool list '
                     '--resource-group "sqlcrudtest-6845" '
                     '--workspace-name "sqlcrudtest-7177"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPools/get/List SQL Analytics pools in a workspace with filter
    def test_sql_pool_list2(self):
        try:
            self.cmd('az synapse sql-pool list '
                     '--resource-group "sqlcrudtest-6845" '
                     '--workspace-name "sqlcrudtest-7177"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPools/get/Get a SQL Analytics pool
    def test_sql_pool_show(self):
        try:
            self.cmd('az synapse sql-pool show '
                     '--resource-group "sqlcrudtest-6852" '
                     '--name "sqlcrudtest-9187" '
                     '--workspace-name "sqlcrudtest-2080"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPools/put/Create a SQL Analytics pool
    def test_sql_pool_create(self):
        try:
            self.cmd('az synapse sql-pool create '
                     '--resource-group "ExampleResourceGroup" '
                     '--location "West US 2" '
                     '--collation "" '
                     '--create-mode "" '
                     '--creation-date "1970-01-01T00:00:00.000Z" '
                     '--max-size-bytes 0 '
                     '--recoverable-database-id "" '
                     '--restore-point-in-time "1970-01-01T00:00:00.000Z" '
                     '--source-database-id "" '
                     '--sku name="" tier="" '
                     '--name "ExampleSqlPool" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPools/patch/Update a SQL Analytics pool
    def test_sql_pool_update(self):
        try:
            self.cmd('az synapse sql-pool update '
                     '--resource-group "ExampleResourceGroup" '
                     '--location "West US 2" '
                     '--collation "" '
                     '--create-mode "" '
                     '--creation-date "1970-01-01T00:00:00.000Z" '
                     '--max-size-bytes 0 '
                     '--recoverable-database-id "" '
                     '--restore-point-in-time "1970-01-01T00:00:00.000Z" '
                     '--source-database-id "" '
                     '--sku name="" tier="" '
                     '--name "ExampleSqlPool" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPools/delete/Delete a SQL Analytics pool
    def test_sql_pool_delete(self):
        try:
            self.cmd('az synapse sql-pool delete -y '
                     '--resource-group "ExampleResourceGroup" '
                     '--name "ExampleSqlPool" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPools/post/Pause a SQL Analytics pool
    def test_sql_pool_pause(self):
        try:
            self.cmd('az synapse sql-pool pause '
                     '--resource-group "Default-SQL-SouthEastAsia" '
                     '--name "testdwdb" '
                     '--workspace-name "testsvr"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPools/post/Rename a SQL Analytics pool
    def test_sql_pool_rename(self):
        try:
            self.cmd('az synapse sql-pool rename '
                     '--id "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Synapse/workspaces/testsvr/sqlPools/newtestdb" '
                     '--resource-group "Default-SQL-SouthEastAsia" '
                     '--name "testdb" '
                     '--workspace-name "testsvr"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPools/post/Resume a SQL Analytics pool
    def test_sql_pool_resume(self):
        try:
            self.cmd('az synapse sql-pool resume '
                     '--resource-group "sqlcrudtest-6852" '
                     '--name "sqlcrudtest-9187" '
                     '--workspace-name "sqlcrudtest-2080"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolMetadataSyncConfigs/get/Get metadata sync config for a SQL Analytics pool
    def test_sql_pool_metadata_sync_config_show(self):
        try:
            self.cmd('az synapse sql-pool-metadata-sync-config show '
                     '--resource-group "ExampleResourceGroup" '
                     '--sql-pool-name "ExampleSqlPool" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolMetadataSyncConfigs/put/Set metadata sync config for a SQL Analytics pool
    def test_sql_pool_metadata_sync_config_create(self):
        try:
            self.cmd('az synapse sql-pool-metadata-sync-config create '
                     '--enabled true '
                     '--resource-group "ExampleResourceGroup" '
                     '--sql-pool-name "ExampleSqlPool" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolOperationResults/get/Get the result of an operation on a SQL Analytics pool
    def test_sql_pool_operation(self):
        try:
            self.cmd('az synapse sql-pool-operation-result show-location-header-result '
                     '--operation-id "fedcba98-7654-4210-fedc-ba9876543210" '
                     '--resource-group "ExampleResourceGroup" '
                     '--sql-pool-name "ExampleSqlPool" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolGeoBackupPolicies/get/Get Sql pool geo backup policy
    def test_sql_pool_geo_backup_policy_show(self):
        try:
            self.cmd('az synapse sql-pool-geo-backup-policy show '
                     '--resource-group "sqlcrudtest-4799" '
                     '--sql-pool-name "testdw" '
                     '--workspace-name "sqlcrudtest-5961"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolDataWarehouseUserActivities/get/Get a SQL Analytics pool user activity
    def test_sql_pool_data_warehouse_user_activity_show(self):
        try:
            self.cmd('az synapse sql-pool-data-warehouse-user-activity show '
                     '--resource-group "Default-SQL-SouthEastAsia" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "testsvr"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolRestorePoints/get/Get a list of restore points of a SQL Analytics pool
    def test_sql_pool_restore_point_list(self):
        try:
            self.cmd('az synapse sql-pool-restore-point list '
                     '--resource-group "Default-SQL-SouthEastAsia" '
                     '--sql-pool-name "testDatabase" '
                     '--workspace-name "testserver"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolRestorePoints/post/Creates Sql pool restore point.
    def test_sql_pool_restore_point_create(self):
        try:
            self.cmd('az synapse sql-pool-restore-point create '
                     '--restore-point-label "mylabel" '
                     '--resource-group "Default-SQL-SouthEastAsia" '
                     '--sql-pool-name "testDatabase" '
                     '--workspace-name "testserver"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolReplicationLinks/get/Lists a Sql Analytic pool's replication links
    def test_sql_pool_replication_link_list(self):
        try:
            self.cmd('az synapse sql-pool-replication-link list '
                     '--resource-group "sqlcrudtest-4799" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "sqlcrudtest-6440"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolTransparentDataEncryptions/get/Get transparent data encryption configuration of a SQL Analytics pool
    def test_sql_pool_transparent_data_encryption_show(self):
        try:
            self.cmd('az synapse sql-pool-transparent-data-encryption show '
                     '--resource-group "sqlcrudtest-6852" '
                     '--sql-pool-name "sqlcrudtest-9187" '
                     '--workspace-name "sqlcrudtest-2080"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolTransparentDataEncryptions/put/Create or update a Sql pool's transparent data encryption configuration
    def test_sql_pool_transparent_data_encryption_create(self):
        try:
            self.cmd('az synapse sql-pool-transparent-data-encryption create '
                     '--status "Enabled" '
                     '--resource-group "sqlcrudtest-6852" '
                     '--sql-pool-name "sqlcrudtest-9187" '
                     '--workspace-name "sqlcrudtest-2080"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolBlobAuditingPolicies/get/Get blob auditing policy of a SQL Analytics pool
    def test_sql_pool_blob_auditing_policy_show(self):
        try:
            self.cmd('az synapse sql-pool-blob-auditing-policy show '
                     '--resource-group "blobauditingtest-6852" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "blobauditingtest-2080"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolBlobAuditingPolicies/put/Create or update a database's blob auditing policy with all parameters
    def test_sql_pool_blob_auditing_policy_create(self):
        try:
            self.cmd('az synapse sql-pool-blob-auditing-policy create '
                     '--audit-actions-and-groups "DATABASE_LOGOUT_GROUP" "DATABASE_ROLE_MEMBER_CHANGE_GROUP" "UPDATE on database::TestDatabaseName by public" '
                     '--is-azure-monitor-target-enabled true '
                     '--is-storage-secondary-key-in-use false '
                     '--retention-days 6 '
                     '--state "Enabled" '
                     '--storage-account-access-key "sdlfkjabc+sdlfkjsdlkfsjdfLDKFTERLKFDFKLjsdfksjdflsdkfD2342309432849328476458/3RSD==" '
                     '--storage-account-subscription-id "00000000-1234-0000-5678-000000000000" '
                     '--storage-endpoint "https://mystorage.blob.core.windows.net" '
                     '--resource-group "blobauditingtest-4799" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "blobauditingtest-6440"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolBlobAuditingPolicies/put/Create or update a database's blob auditing policy with minimal parameters
    def test_sql_pool_blob_auditing_policy_create2(self):
        try:
            self.cmd('az synapse sql-pool-blob-auditing-policy create '
                     '--state "Enabled" '
                     '--storage-account-access-key "sdlfkjabc+sdlfkjsdlkfsjdfLDKFTERLKFDFKLjsdfksjdflsdkfD2342309432849328476458/3RSD==" '
                     '--storage-endpoint "https://mystorage.blob.core.windows.net" '
                     '--resource-group "blobauditingtest-4799" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "blobauditingtest-6440"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolOperations/get/List the Sql Analytics pool management operations
    def test_sql_pool_operation_list(self):
        try:
            self.cmd('az synapse sql-pool-operation list '
                     '--resource-group "sqlcrudtest-7398" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "sqlcrudtest-4645"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolUsages/get/List the usages of a SQL Analytics pool
    def test_sql_pool_usage_list(self):
        try:
            self.cmd('az synapse sql-pool-usage list '
                     '--resource-group "sqlcrudtest-6730" '
                     '--sql-pool-name "3481" '
                     '--workspace-name "sqlcrudtest-9007"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolSensitivityLabels/put/Updates the sensitivity label of a given column with all parameters
    def test_sql_pool_sensitivity_label_create(self):
        try:
            self.cmd('az synapse sql-pool-sensitivity-label create '
                     '--column-name "myColumn" '
                     '--information-type "PhoneNumber" '
                     '--information-type-id "d22fa6e9-5ee4-3bde-4c2b-a409604c4646" '
                     '--label-id "bf91e08c-f4f0-478a-b016-25164b2a65ff" '
                     '--label-name "PII" '
                     '--resource-group "myRG" '
                     '--schema-name "dbo" '
                     '--sql-pool-name "myDatabase" '
                     '--table-name "myTable" '
                     '--workspace-name "myServer"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolSensitivityLabels/delete/Deletes the sensitivity label of a given column
    def test_sql_pool_sensitivity_label_delete(self):
        try:
            self.cmd('az synapse sql-pool-sensitivity-label delete -y '
                     '--column-name "myColumn" '
                     '--resource-group "myRG" '
                     '--schema-name "dbo" '
                     '--sql-pool-name "myDatabase" '
                     '--table-name "myTable" '
                     '--workspace-name "myServer"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolSensitivityLabels/post/Disables sensitivity recommendations on a given column
    def test_sql_pool_sensitivity(self):
        try:
            self.cmd('az synapse sql-pool-sensitivity-label disable-recommendation '
                     '--column-name "myColumn" '
                     '--resource-group "myRG" '
                     '--schema-name "dbo" '
                     '--sql-pool-name "myDatabase" '
                     '--table-name "myTable" '
                     '--workspace-name "myServer"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolSensitivityLabels/post/Enables sensitivity recommendations on a given column
    def test_sql_pool_sensitivity2(self):
        try:
            self.cmd('az synapse sql-pool-sensitivity-label enable-recommendation '
                     '--column-name "myColumn" '
                     '--resource-group "myRG" '
                     '--schema-name "dbo" '
                     '--sql-pool-name "myDatabase" '
                     '--table-name "myTable" '
                     '--workspace-name "myServer"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolSensitivityLabels/get/Gets the current sensitivity labels of a given SQL Analytics pool
    def test_sql_pool_sensitivity_label_list_current(self):
        try:
            self.cmd('az synapse sql-pool-sensitivity-label list-current '
                     '--resource-group "myRG" '
                     '--sql-pool-name "myDatabase" '
                     '--workspace-name "myServer"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolSensitivityLabels/get/Gets the recommended sensitivity labels of a given SQL Analytics pool
    def test_sql_pool_sensitivity_label_list_recommended(self):
        try:
            self.cmd('az synapse sql-pool-sensitivity-label list-recommended '
                     '--resource-group "myRG" '
                     '--sql-pool-name "myDatabase" '
                     '--workspace-name "myServer"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolSchemas/get/List the schema in a SQL Analytics pool
    def test_sql_pool_schema_list(self):
        try:
            self.cmd('az synapse sql-pool-schema list '
                     '--resource-group "myRG" '
                     '--sql-pool-name "myDatabase" '
                     '--workspace-name "serverName"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolTables/get/List the tables of a given schema in a SQL Analytics pool
    def test_sql_pool_table_list(self):
        try:
            self.cmd('az synapse sql-pool-table list '
                     '--resource-group "myRG" '
                     '--schema-name "dbo" '
                     '--sql-pool-name "myDatabase" '
                     '--workspace-name "serverName"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolTableColumns/get/List the columns in a table of a given schema in a SQL Analytics pool
    def test_sql_pool_table_column_list(self):
        try:
            self.cmd('az synapse sql-pool-table-column list '
                     '--resource-group "myRG" '
                     '--schema-name "dbo" '
                     '--sql-pool-name "myDatabase" '
                     '--table-name "table1" '
                     '--workspace-name "serverName"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolConnectionPolicies/get/Get a connection policy of a SQL Analytics pool
    def test_sql_pool_connection_policy_show(self):
        try:
            self.cmd('az synapse sql-pool-connection-policy show '
                     '--resource-group "blobauditingtest-6852" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "blobauditingtest-2080"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolVulnerabilityAssessments/get/Get a vulnerability assessment of a SQL Analytics pool
    def test_sql_pool_vulnerability_assessment_list(self):
        try:
            self.cmd('az synapse sql-pool-vulnerability-assessment list '
                     '--resource-group "vulnerabilityaseessmenttest-4799" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "vulnerabilityaseessmenttest-6440"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolVulnerabilityAssessments/get/Get a Sql pool's vulnerability assessment
    def test_sql_pool_vulnerability_assessment_show(self):
        try:
            self.cmd('az synapse sql-pool-vulnerability-assessment show '
                     '--resource-group "vulnerabilityaseessmenttest-4799" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "vulnerabilityaseessmenttest-6440"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolVulnerabilityAssessments/put/Create a database's vulnerability assessment with all parameters
    def test_sql_pool_vulnerability_assessment_create(self):
        try:
            self.cmd('az synapse sql-pool-vulnerability-assessment create '
                     '--recurring-scans email-subscription-admins=true emails="email1@mail.com" emails="email2@mail.com" is-enabled=true '
                     '--storage-account-access-key "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" '
                     '--storage-container-path "https://myStorage.blob.core.windows.net/vulnerability-assessment/" '
                     '--storage-container-sas-key "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" '
                     '--resource-group "vulnerabilityaseessmenttest-4799" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "vulnerabilityaseessmenttest-6440"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolVulnerabilityAssessments/put/Create a database's vulnerability assessment with minimal parameters, when storageAccountAccessKey is specified
    def test_sql_pool_vulnerability_assessment_create2(self):
        try:
            self.cmd('az synapse sql-pool-vulnerability-assessment create '
                     '--storage-account-access-key "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" '
                     '--storage-container-path "https://myStorage.blob.core.windows.net/vulnerability-assessment/" '
                     '--resource-group "vulnerabilityaseessmenttest-4799" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "vulnerabilityaseessmenttest-6440"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolVulnerabilityAssessments/put/Create a database's vulnerability assessment with minimal parameters, when storageContainerSasKey is specified
    def test_sql_pool_vulnerability_assessment_create3(self):
        try:
            self.cmd('az synapse sql-pool-vulnerability-assessment create '
                     '--storage-container-path "https://myStorage.blob.core.windows.net/vulnerability-assessment/" '
                     '--storage-container-sas-key "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" '
                     '--resource-group "vulnerabilityaseessmenttest-4799" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "vulnerabilityaseessmenttest-6440"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolVulnerabilityAssessments/delete/Remove a database's vulnerability assessment
    def test_sql_pool_vulnerability_assessment_delete(self):
        try:
            self.cmd('az synapse sql-pool-vulnerability-assessment delete -y '
                     '--resource-group "vulnerabilityaseessmenttest-4799" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "vulnerabilityaseessmenttest-6440"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolVulnerabilityAssessmentScans/get/Get a vulnerability scan record of a SQL Analytics pool
    def test_sql_pool_vulnerability_assessment_scan_list(self):
        try:
            self.cmd('az synapse sql-pool-vulnerability-assessment-scan list '
                     '--resource-group "vulnerabilityassessmenttest-4711" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "vulnerabilityassessmenttest-6411"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolVulnerabilityAssessmentScans/post/Export a database's vulnerability assessment scan results.
    def test_sql_pool_vulnerability_assessment_scan_export(self):
        try:
            self.cmd('az synapse sql-pool-vulnerability-assessment-scan export '
                     '--resource-group "vulnerabilityassessmenttest-4799" '
                     '--scan-id "scan001" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "vulnerabilityassessmenttest-6440"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolVulnerabilityAssessmentScans/post/Executes a Sql pool's vulnerability assessment scan.
    def test_sql_pool_vulnerability3(self):
        try:
            self.cmd('az synapse sql-pool-vulnerability-assessment-scan initiate-scan '
                     '--resource-group "vulnerabilityassessmenttest-4711" '
                     '--scan-id "scan01" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "vulnerabilityassessmenttest-6411"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolSecurityAlertPolicies/get/Get a security alert of a SQL Analytics pool
    def test_sql_pool_security_alert_policy_show(self):
        try:
            self.cmd('az synapse sql-pool-security-alert-policy show '
                     '--resource-group "securityalert-6852" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "securityalert-2080"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolSecurityAlertPolicies/put/Create a Sql pool's threat detection policy with all parameters
    def test_sql_pool_security_alert_policy_create(self):
        try:
            self.cmd('az synapse sql-pool-security-alert-policy create '
                     '--disabled-alerts "Sql_Injection" "Usage_Anomaly" '
                     '--email-account-admins true '
                     '--email-addresses "test@microsoft.com" "user@microsoft.com" '
                     '--retention-days 6 '
                     '--state "Enabled" '
                     '--storage-account-access-key "sdlfkjabc+sdlfkjsdlkfsjdfLDKFTERLKFDFKLjsdfksjdflsdkfD2342309432849328476458/3RSD==" '
                     '--storage-endpoint "https://mystorage.blob.core.windows.net" '
                     '--resource-group "securityalert-4799" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "securityalert-6440"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolSecurityAlertPolicies/put/Update a Sql pool's threat detection policy with minimal parameters
    def test_sql_pool_security_alert_policy_update(self):
        try:
            self.cmd('az synapse sql-pool-security-alert-policy update '
                     '--state "Enabled" '
                     '--resource-group "securityalert-4799" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "securityalert-6440"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolVulnerabilityAssessmentRuleBaselines/put/Creates or updates a database's vulnerability assessment rule baseline.
    def test_sql_pool_vulnerability(self):
        try:
            self.cmd('az synapse sql-pool-vulnerability-assessment-rule-baseline create '
                     '--baseline-name "default" '
                     '--baseline-results result="userA" result="SELECT" '
                     '--baseline-results result="userB" result="SELECT" '
                     '--baseline-results result="userC" result="SELECT" result="tableId_4" '
                     '--resource-group "vulnerabilityaseessmenttest-4799" '
                     '--rule-id "VA1001" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "vulnerabilityaseessmenttest-6440"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /SqlPoolVulnerabilityAssessmentRuleBaselines/delete/Removes a database's vulnerability assessment rule baseline.
    def test_sql_pool_vulnerability2(self):
        try:
            self.cmd('az synapse sql-pool-vulnerability-assessment-rule-baseline delete -y '
                     '--baseline-name "default" '
                     '--resource-group "vulnerabilityaseessmenttest-4799" '
                     '--rule-id "VA1001" '
                     '--sql-pool-name "testdb" '
                     '--workspace-name "vulnerabilityaseessmenttest-6440"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /Workspaces/get/List workspaces in resource group
    def test_workspace_list(self):
        try:
            self.cmd('az synapse workspace list '
                     '--resource-group "resourceGroup1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /Workspaces/get/List workspaces in subscription
    def test_workspace_list2(self):
        try:
            self.cmd('az synapse workspace list')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /Workspaces/get/Get a workspace
    def test_workspace_show(self):
        try:
            self.cmd('az synapse workspace show '
                     '--resource-group "resourceGroup1" '
                     '--name "workspace1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /Workspaces/put/Create or update a workspace
    def test_workspace_create(self):
        try:
            self.cmd('az synapse workspace create '
                     '--resource-group "resourceGroup1" '
                     '--type "SystemAssigned" '
                     '--location "East US" '
                     '--default-data-lake-storage account-url="https://accountname.dfs.core.windows.net" filesystem="default" '
                     '--managed-resource-group-name "workspaceManagedResourceGroupUnique" '
                     '--managed-virtual-network "default" '
                     '--sql-administrator-login "login" '
                     '--sql-administrator-login-password "password" '
                     '--tags key="value" '
                     '--name "workspace1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /Workspaces/patch/Update a workspace
    def test_workspace_update(self):
        try:
            self.cmd('az synapse workspace update '
                     '--resource-group "resourceGroup1" '
                     '--name "workspace1" '
                     '--type "SystemAssigned" '
                     '--sql-administrator-login-password "password" '
                     '--tags key="value"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /Workspaces/delete/Delete a workspace
    def test_workspace_delete(self):
        try:
            self.cmd('az synapse workspace delete -y '
                     '--resource-group "resourceGroup1" '
                     '--name "workspace1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /WorkspaceAadAdmins/get/Get workspace active directory admin
    def test_workspace_aad_admin_show(self):
        try:
            self.cmd('az synapse workspace-aad-admin show '
                     '--resource-group "resourceGroup1" '
                     '--workspace-name "workspace1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /WorkspaceAadAdmins/put/Create or update workspace active directory admin
    def test_workspace_aad_admin_create(self):
        try:
            self.cmd('az synapse workspace-aad-admin create '
                     '--administrator-type "ActiveDirectory" '
                     '--login "bob@contoso.com" '
                     '--sid "c6b82b90-a647-49cb-8a62-0d2d3cb7ac7c" '
                     '--tenant-id "c6b82b90-a647-49cb-8a62-0d2d3cb7ac7c" '
                     '--resource-group "resourceGroup1" '
                     '--workspace-name "workspace1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /WorkspaceAadAdmins/delete/Delete workspace active directory admin
    def test_workspace_aad_admin_delete(self):
        try:
            self.cmd('az synapse workspace-aad-admin delete -y '
                     '--resource-group "resourceGroup1" '
                     '--workspace-name "workspace1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /WorkspaceManagedIdentitySqlControlSettings/get/Get managed identity sql control settings
    def test_workspace_managed_identity2(self):
        try:
            self.cmd('az synapse workspace-managed-identity-sql-control-setting show '
                     '--resource-group "resourceGroup1" '
                     '--workspace-name "workspace1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /WorkspaceManagedIdentitySqlControlSettings/put/Create or update managed identity sql control settings
    def test_workspace_managed_identity(self):
        try:
            self.cmd('az synapse workspace-managed-identity-sql-control-setting create '
                     '--desired-state "Enabled" '
                     '--resource-group "resourceGroup1" '
                     '--workspace-name "workspace1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimes/get/List integration runtimes
    def test_integration_runtime_list(self):
        try:
            self.cmd('az synapse integration-runtime list '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimes/get/Get integration runtime
    def test_integration_runtime_show(self):
        try:
            self.cmd('az synapse integration-runtime show '
                     '--name "exampleIntegrationRuntime" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimes/put/Create integration runtime
    def test_integration_runtime_create(self):
        try:
            self.cmd('az synapse integration-runtime create '
                     '--properties "{{\\"type\\":\\"SelfHosted\\",\\"description\\":\\"A selfhosted integration runtime\\"}}" '
                     '--name "exampleIntegrationRuntime" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimes/patch/Update integration runtime
    def test_integration_runtime_update(self):
        try:
            self.cmd('az synapse integration-runtime update '
                     '--name "exampleIntegrationRuntime" '
                     '--resource-group "exampleResourceGroup" '
                     '--auto-update "Off" '
                     '--update-delay-offset "\\"PT3H\\"" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimes/delete/Delete integration runtime
    def test_integration_runtime_delete(self):
        try:
            self.cmd('az synapse integration-runtime delete -y '
                     '--name "exampleIntegrationRuntime" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimes/post/Start integration runtime
    def test_integration_runtime_start(self):
        try:
            self.cmd('az synapse integration-runtime start '
                     '--name "exampleManagedIntegrationRuntime" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimes/post/Stop integration runtime
    def test_integration_runtime_stop(self):
        try:
            self.cmd('az synapse integration-runtime stop '
                     '--name "exampleManagedIntegrationRuntime" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimes/post/Upgrade integration runtime
    def test_integration_runtime_upgrade(self):
        try:
            self.cmd('az synapse integration-runtime upgrade '
                     '--name "exampleIntegrationRuntime" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimeNodeIpAddress/post/Get integration runtime node IP address
    def test_integration_runtime_node_ip_address_get(self):
        try:
            self.cmd('az synapse integration-runtime-node-ip-address get '
                     '--integration-runtime-name "exampleIntegrationRuntime" '
                     '--node-name "Node_1" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimeObjectMetadata/post/Get integration runtime object metadata
    def test_integration_runtime_object_metadata_get(self):
        try:
            self.cmd('az synapse integration-runtime-object-metadata get '
                     '--metadata-path "ssisFolders" '
                     '--integration-runtime-name "testactivityv2" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimeObjectMetadata/post/Refresh object metadata
    def test_integration_runtime_object_metadata_refresh(self):
        try:
            self.cmd('az synapse integration-runtime-object-metadata refresh '
                     '--integration-runtime-name "testactivityv2" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimeNodes/get/Get integration runtime node
    def test_integration_runtime_node_show(self):
        try:
            self.cmd('az synapse integration-runtime-node show '
                     '--integration-runtime-name "exampleIntegrationRuntime" '
                     '--node-name "Node_1" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimeNodes/patch/Update integration runtime node
    def test_integration_runtime_node_update(self):
        try:
            self.cmd('az synapse integration-runtime-node update '
                     '--integration-runtime-name "exampleIntegrationRuntime" '
                     '--node-name "Node_1" '
                     '--resource-group "exampleResourceGroup" '
                     '--concurrent-jobs-limit 2 '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimeNodes/delete/Delete integration runtime node
    def test_integration_runtime_node_delete(self):
        try:
            self.cmd('az synapse integration-runtime-node delete -y '
                     '--integration-runtime-name "exampleIntegrationRuntime" '
                     '--node-name "Node_1" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimeCredentials/post/Sync credentials
    def test_integration_runtime_credentials_sync(self):
        try:
            self.cmd('az synapse integration-runtime-credentials sync '
                     '--integration-runtime-name "exampleIntegrationRuntime" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimeConnectionInfos/post/Get connection info
    def test_integration_runtime_connection_info_get(self):
        try:
            self.cmd('az synapse integration-runtime-connection-info get '
                     '--integration-runtime-name "exampleIntegrationRuntime" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimeAuthKeys/post/List auth keys
    def test_integration_runtime_auth_key_list(self):
        try:
            self.cmd('az synapse integration-runtime-auth-key list '
                     '--integration-runtime-name "exampleIntegrationRuntime" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimeAuthKeys/post/Regenerate auth key
    def test_integration_runtime_auth_key_regenerate(self):
        try:
            self.cmd('az synapse integration-runtime-auth-key regenerate '
                     '--integration-runtime-name "exampleIntegrationRuntime" '
                     '--key-name "authKey2" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimeMonitoringData/post/Get monitoring data
    def test_integration_runtime_monitoring_data_get(self):
        try:
            self.cmd('az synapse integration-runtime-monitoring-data get '
                     '--integration-runtime-name "exampleIntegrationRuntime" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /IntegrationRuntimeStatus/post/Get status
    def test_integration_runtime_status_get(self):
        try:
            self.cmd('az synapse integration-runtime-status get '
                     '--integration-runtime-name "exampleIntegrationRuntime" '
                     '--resource-group "exampleResourceGroup" '
                     '--workspace-name "exampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /PrivateLinkResources/get/Get private link resources for workspace
    def test_private_link_resource_list(self):
        try:
            self.cmd('az synapse private-link-resource list '
                     '--resource-group "ExampleResourceGroup" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /PrivateLinkResources/get/Get private link resources for workspace
    def test_private_link_resource_show(self):
        try:
            self.cmd('az synapse private-link-resource show '
                     '--name "sql" '
                     '--resource-group "ExampleResourceGroup" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /PrivateEndpointConnections/get/List private endpoint connections in workspace
    def test_private_endpoint_connection_list(self):
        try:
            self.cmd('az synapse private-endpoint-connection list '
                     '--resource-group "ExampleResourceGroup" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /PrivateEndpointConnections/get/Get private endpoint connection
    def test_private_endpoint_connection_show(self):
        try:
            self.cmd('az synapse private-endpoint-connection show '
                     '--name "ExamplePrivateEndpointConnection" '
                     '--resource-group "ExampleResourceGroup" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /PrivateEndpointConnections/put/Approve private endpoint connection
    def test_private_endpoint_connection_create(self):
        try:
            self.cmd('az synapse private-endpoint-connection create '
                     '--name "ExamplePrivateEndpointConnection" '
                     '--resource-group "ExampleResourceGroup" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /PrivateEndpointConnections/delete/Delete private endpoint connection
    def test_private_endpoint_connection_delete(self):
        try:
            self.cmd('az synapse private-endpoint-connection delete -y '
                     '--name "ExamplePrivateEndpointConnection" '
                     '--resource-group "ExampleResourceGroup" '
                     '--workspace-name "ExampleWorkspace"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /PrivateLinkHubs/get/List privateLinkHubs in resource group
    def test_private_link_hub_list(self):
        try:
            self.cmd('az synapse private-link-hub list '
                     '--resource-group "resourceGroup1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /PrivateLinkHubs/get/List privateLinkHubs in subscription
    def test_private_link_hub_list2(self):
        try:
            self.cmd('az synapse private-link-hub list')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /PrivateLinkHubs/get/Get a privateLinkHub
    def test_private_link_hub_show(self):
        try:
            self.cmd('az synapse private-link-hub show '
                     '--name "privateLinkHub1" '
                     '--resource-group "resourceGroup1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /PrivateLinkHubs/put/Create or update a privateLinkHub
    def test_private_link_hub_create(self):
        try:
            self.cmd('az synapse private-link-hub create '
                     '--location "East US" '
                     '--tags key="value" '
                     '--name "privateLinkHub1" '
                     '--resource-group "resourceGroup1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /PrivateLinkHubs/patch/Update a privateLinkHub
    def test_private_link_hub_update(self):
        try:
            self.cmd('az synapse private-link-hub update '
                     '--name "privateLinkHub1" '
                     '--tags key="value" '
                     '--resource-group "resourceGroup1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")

    # EXAMPLE: /PrivateLinkHubs/delete/Delete a privateLinkHub
    def test_private_link_hub_delete(self):
        try:
            self.cmd('az synapse private-link-hub delete -y '
                     '--name "privateLinkHub1" '
                     '--resource-group "resourceGroup1"')
            raise Exception("Error Expected!")
        except ResourceNotFoundError as e:
            assert e.message.startswith("(500)")
        except SystemExit as e:
            assert e.__context__.message.startswith("(500)")
