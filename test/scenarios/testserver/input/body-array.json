{
  "swagger": "2.0",
  "info": {
    "title": "AutoRest Swagger BAT Array Service",
    "description": "Test Infrastructure for AutoRest Swagger BAT",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "schemes": [
    "http"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/array/null": {
      "get": {
        "operationId": "array_getNull",
        "description": "Get null array value",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The null Array value",
            "schema": {
              "description": "The null Array value",
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/invalid": {
      "get": {
        "operationId": "array_getInvalid",
        "description": "Get invalid array [1, 2, 3",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The invalid Array [1, 2, 3",
            "schema": {
              "description": "The invalid Array [1, 2, 3",
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/empty": {
      "x-extension-under-path": true,
      "get": {
        "operationId": "array_getEmpty",
        "description": "Get empty array value []",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The empty array value []",
            "schema": {
              "description": "The empty array value []",
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putEmpty",
        "description": "Set array value empty []",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "The empty array value []",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/boolean/tfft": {
      "get": {
        "operationId": "array_getBooleanTfft",
        "description": "Get boolean array value [true, false, false, true]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [true, false, false, true]",
            "schema": {
              "description": "The array value [true, false, false, true]",
              "type": "array",
              "items": {
                "type": "boolean"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putBooleanTfft",
        "description": "Set array value empty [true, false, false, true]",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "The array value [true, false, false, true]",
              "type": "array",
              "items": {
                "type": "boolean"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/boolean/true.null.false": {
      "get": {
        "operationId": "array_getBooleanInvalidNull",
        "description": "Get boolean array value [true, null, false]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [true, null, false]",
            "schema": {
              "description": "The array value [true, null, false]",
              "type": "array",
              "items": {
                "type": "boolean"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/boolean/true.boolean.false": {
      "get": {
        "operationId": "array_getBooleanInvalidString",
        "description": "Get boolean array value [true, 'boolean', false]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [true, 'boolean', false]",
            "schema": {
              "description": "The array value [true, 'boolean', false]",
              "type": "array",
              "items": {
                "type": "boolean"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/integer/1.-1.3.300": {
      "get": {
        "operationId": "array_getIntegerValid",
        "description": "Get integer array value [1, -1, 3, 300]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [1, -1, 3, 300]",
            "schema": {
              "description": "The array value [1, -1, 3, 300]",
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putIntegerValid",
        "description": "Set array value empty [1, -1, 3, 300]",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "The array value [1, -1, 3, 300]",
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/integer/1.null.zero": {
      "get": {
        "operationId": "array_getIntInvalidNull",
        "description": "Get integer array value [1, null, 0]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [1, null, 0]",
            "schema": {
              "description": "The array value [1, null, 0]",
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/integer/1.integer.0": {
      "get": {
        "operationId": "array_getIntInvalidString",
        "description": "Get integer array value [1, 'integer', 0]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [1, 'integer', 0]",
            "schema": {
              "description": "The array value [1, 'integer', 0]",
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/long/1.-1.3.300": {
      "get": {
        "operationId": "array_getLongValid",
        "description": "Get integer array value [1, -1, 3, 300]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [1, -1, 3, 300]",
            "schema": {
              "description": "The array value [1, -1, 3, 300]",
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putLongValid",
        "description": "Set array value empty [1, -1, 3, 300]",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "The array value [1, -1, 3, 300]",
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/long/1.null.zero": {
      "get": {
        "operationId": "array_getLongInvalidNull",
        "description": "Get long array value [1, null, 0]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [1, null, 0]",
            "schema": {
              "description": "The array value [1, null, 0]",
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/long/1.integer.0": {
      "get": {
        "operationId": "array_getLongInvalidString",
        "description": "Get long array value [1, 'integer', 0]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [1, 'integer', 0]",
            "schema": {
              "description": "The array value [1, 'integer', 0]",
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/float/0--0.01-1.2e20": {
      "get": {
        "operationId": "array_getFloatValid",
        "description": "Get float array value [0, -0.01, 1.2e20]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [0, -0.01, 1.2e20]",
            "schema": {
              "description": "The array value [0, -0.01, 1.2e20]",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putFloatValid",
        "description": "Set array value [0, -0.01, 1.2e20]",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "The array value [0, -0.01, 1.2e20]",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/float/0.0-null-1.2e20": {
      "get": {
        "operationId": "array_getFloatInvalidNull",
        "description": "Get float array value [0.0, null, -1.2e20]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [0.0, null, -1.2e20]",
            "schema": {
              "description": "The array value [0.0, null, -1.2e20]",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/float/1.number.0": {
      "get": {
        "operationId": "array_getFloatInvalidString",
        "description": "Get boolean array value [1.0, 'number', 0.0]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [1.0, 'number', 0.0]",
            "schema": {
              "description": "The array value [1.0, 'number', 0.0]",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/double/0--0.01-1.2e20": {
      "get": {
        "operationId": "array_getDoubleValid",
        "description": "Get float array value [0, -0.01, 1.2e20]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [0, -0.01, 1.2e20]",
            "schema": {
              "description": "The array value [0, -0.01, 1.2e20]",
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putDoubleValid",
        "description": "Set array value [0, -0.01, 1.2e20]",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "The array value [0, -0.01, 1.2e20]",
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/double/0.0-null-1.2e20": {
      "get": {
        "operationId": "array_getDoubleInvalidNull",
        "description": "Get float array value [0.0, null, -1.2e20]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [0.0, null, -1.2e20]",
            "schema": {
              "description": "The array value [0.0, null, -1.2e20]",
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/double/1.number.0": {
      "get": {
        "operationId": "array_getDoubleInvalidString",
        "description": "Get boolean array value [1.0, 'number', 0.0]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [1.0, 'number', 0.0]",
            "schema": {
              "description": "The array value [1.0, 'number', 0.0]",
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/string/foo1.foo2.foo3": {
      "get": {
        "operationId": "array_getStringValid",
        "description": "Get string array value ['foo1', 'foo2', 'foo3']",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value ['foo1', 'foo2', 'foo3']",
            "schema": {
              "description": "The array value ['foo1', 'foo2', 'foo3']",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putStringValid",
        "description": "Set array value ['foo1', 'foo2', 'foo3']",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "The array value ['foo1', 'foo2', 'foo3']",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/enum/foo1.foo2.foo3": {
      "get": {
        "operationId": "array_getEnumValid",
        "description": "Get enum array value ['foo1', 'foo2', 'foo3']",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value ['foo1', 'foo2', 'foo3']",
            "schema": {
              "description": "The array value ['foo1', 'foo2', 'foo3']",
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["foo1", "foo2", "foo3"],
                "x-ms-enum": { "name": "FooEnum", "modelAsString": false }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putEnumValid",
        "description": "Set array value ['foo1', 'foo2', 'foo3']",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "The array value ['foo1', 'foo2', 'foo3']",
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["foo1", "foo2", "foo3"],
                "x-ms-enum": { "name": "FooEnum", "modelAsString": false }
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/string-enum/foo1.foo2.foo3": {
      "get": {
        "operationId": "array_getStringEnumValid",
        "description": "Get enum array value ['foo1', 'foo2', 'foo3']",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value ['foo1', 'foo2', 'foo3']",
            "schema": {
              "description": "The array value ['foo1', 'foo2', 'foo3']",
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["foo1", "foo2", "foo3"]
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putStringEnumValid",
        "description": "Set array value ['foo1', 'foo2', 'foo3']",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "The array value ['foo1', 'foo2', 'foo3']",
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["foo1", "foo2", "foo3"]
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/string/foo.null.foo2": {
      "get": {
        "operationId": "array_getStringWithNull",
        "description": "Get string array value ['foo', null, 'foo2']",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value ['foo', null, 'foo2']",
            "schema": {
              "description": "The array value ['foo', null, 'foo2']",
              "type": "array",
              "items": {
                "type": "string",
                "x-nullable": true
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/string/foo.123.foo2": {
      "get": {
        "operationId": "array_getStringWithInvalid",
        "description": "Get string array value ['foo', 123, 'foo2']",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value ['foo', 123, 'foo2']",
            "schema": {
              "description": "The array value ['foo', 123, 'foo2']",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/uuid/valid": {
      "get": {
        "operationId": "array_getUuidValid",
        "description": "Get uuid array value ['6dcc7237-45fe-45c4-8a6b-3a8a3f625652', 'd1399005-30f7-40d6-8da6-dd7c89ad34db', 'f42f6aa1-a5bc-4ddf-907e-5f915de43205']",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value ['6dcc7237-45fe-45c4-8a6b-3a8a3f625652', 'd1399005-30f7-40d6-8da6-dd7c89ad34db', 'f42f6aa1-a5bc-4ddf-907e-5f915de43205']",
            "schema": {
              "description": "The array value ['6dcc7237-45fe-45c4-8a6b-3a8a3f625652', 'd1399005-30f7-40d6-8da6-dd7c89ad34db', 'f42f6aa1-a5bc-4ddf-907e-5f915de43205']",
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putUuidValid",
        "description": "Set array value  ['6dcc7237-45fe-45c4-8a6b-3a8a3f625652', 'd1399005-30f7-40d6-8da6-dd7c89ad34db', 'f42f6aa1-a5bc-4ddf-907e-5f915de43205']",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "The array value ['6dcc7237-45fe-45c4-8a6b-3a8a3f625652', 'd1399005-30f7-40d6-8da6-dd7c89ad34db', 'f42f6aa1-a5bc-4ddf-907e-5f915de43205']",
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/uuid/invalidchars": {
      "get": {
        "operationId": "array_getUuidInvalidChars",
        "description": "Get uuid array value ['6dcc7237-45fe-45c4-8a6b-3a8a3f625652', 'foo']",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value ['6dcc7237-45fe-45c4-8a6b-3a8a3f625652', 'foo']",
            "schema": {
              "description": "The array value ['6dcc7237-45fe-45c4-8a6b-3a8a3f625652', 'foo']",
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/date/valid": {
      "get": {
        "operationId": "array_getDateValid",
        "description": "Get integer array value ['2000-12-01', '1980-01-02', '1492-10-12']",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value ['2000-12-01', '1980-01-02', '1492-10-12']",
            "schema": {
              "description": "The array value ['2000-12-01', '1980-01-02', '1492-10-12']",
              "type": "array",
              "items": {
                "type": "string",
                "format": "date"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putDateValid",
        "description": "Set array value  ['2000-12-01', '1980-01-02', '1492-10-12']",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "The array value ['2000-12-01', '1980-01-02', '1492-10-12']",
              "type": "array",
              "items": {
                "type": "string",
                "format": "date"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/date/invalidnull": {
      "get": {
        "operationId": "array_getDateInvalidNull",
        "description": "Get date array value ['2012-01-01', null, '1776-07-04']",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value ['2012-01-01', null, '1776-07-04']",
            "schema": {
              "description": "The array value ['2012-01-01', null, '1776-07-04']",
              "type": "array",
              "items": {
                "type": "string",
                "format": "date"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/date/invalidchars": {
      "get": {
        "operationId": "array_getDateInvalidChars",
        "description": "Get date array value ['2011-03-22', 'date']",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value ['2011-03-22', 'date']",
            "schema": {
              "description": "The array value ['2011-03-22', 'date']",
              "type": "array",
              "items": {
                "type": "string",
                "format": "date"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/date-time/valid": {
      "get": {
        "operationId": "array_getDateTimeValid",
        "description": "Get date-time array value ['2000-12-01t00:00:01z', '1980-01-02T00:11:35+01:00', '1492-10-12T10:15:01-08:00']",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value ['2000-12-01t00:00:01z', '1980-01-02T00:11:35+01:00', '1492-10-12T10:15:01-08:00']",
            "schema": {
              "description": "The array value ['2000-12-01t00:00:01z', '1980-01-02T00:11:35+01:00', '1492-10-12T10:15:01-08:00']",
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putDateTimeValid",
        "description": "Set array value  ['2000-12-01t00:00:01z', '1980-01-02T00:11:35+01:00', '1492-10-12T10:15:01-08:00']",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "The array value ['2000-12-01t00:00:01z', '1980-01-02T00:11:35+01:00', '1492-10-12T10:15:01-08:00']",
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/date-time/invalidnull": {
      "get": {
        "operationId": "array_getDateTimeInvalidNull",
        "description": "Get date array value ['2000-12-01t00:00:01z', null]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value ['2000-12-01t00:00:01z', null]",
            "schema": {
              "description": "The array value ['2000-12-01t00:00:01z', null]",
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/date-time/invalidchars": {
      "get": {
        "operationId": "array_getDateTimeInvalidChars",
        "description": "Get date array value ['2000-12-01t00:00:01z', 'date-time']",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value ['2000-12-01t00:00:01z', 'date-time']",
            "schema": {
              "description": "The array value ['2000-12-01t00:00:01z', 'date-time']",
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/date-time-rfc1123/valid": {
      "get": {
        "operationId": "array_getDateTimeRfc1123Valid",
        "description": "Get date-time array value ['Fri, 01 Dec 2000 00:00:01 GMT', 'Wed, 02 Jan 1980 00:11:35 GMT', 'Wed, 12 Oct 1492 10:15:01 GMT']",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value ['Fri, 01 Dec 2000 00:00:01 GMT', 'Wed, 02 Jan 1980 00:11:35 GMT', 'Wed, 12 Oct 1492 10:15:01 GMT']",
            "schema": {
              "description": "The array value ['Fri, 01 Dec 2000 00:00:01 GMT', 'Wed, 02 Jan 1980 00:11:35 GMT', 'Wed, 12 Oct 1492 10:15:01 GMT']",
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time-rfc1123"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putDateTimeRfc1123Valid",
        "description": "Set array value  ['Fri, 01 Dec 2000 00:00:01 GMT', 'Wed, 02 Jan 1980 00:11:35 GMT', 'Wed, 12 Oct 1492 10:15:01 GMT']",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "The array value ['Fri, 01 Dec 2000 00:00:01 GMT', 'Wed, 02 Jan 1980 00:11:35 GMT', 'Wed, 12 Oct 1492 10:15:01 GMT']",
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time-rfc1123"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/duration/valid": {
      "get": {
        "operationId": "array_getDurationValid",
        "description": "Get duration array value ['P123DT22H14M12.011S', 'P5DT1H0M0S']",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value ['P123DT22H14M12.011S', 'P5DT1H0M0S']",
            "schema": {
              "description": "The array value ['P123DT22H14M12.011S', 'P5DT1H0M0S']",
              "type": "array",
              "items": {
                "type": "string",
                "format": "duration"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putDurationValid",
        "description": "Set array value  ['P123DT22H14M12.011S', 'P5DT1H0M0S']",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "The array value ['P123DT22H14M12.011S', 'P5DT1H0M0S']",
              "type": "array",
              "items": {
                "type": "string",
                "format": "duration"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/byte/valid": {
      "get": {
        "operationId": "array_getByteValid",
        "description": "Get byte array value [hex(FF FF FF FA), hex(01 02 03), hex (25, 29, 43)] with each item encoded in base64",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The array value [hex(FF FF FF FA), hex(01 02 03), hex (25, 29, 43)] with each elementencoded in base 64",
            "schema": {
              "description": "The array value [hex(FF FF FF FA), hex(01 02 03), hex (25, 29, 43)] with each elementencoded in base 64",
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putByteValid",
        "description": "Put the array value [hex(FF FF FF FA), hex(01 02 03), hex (25, 29, 43)] with each elementencoded in base 64",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "The array value [hex(FF FF FF FA), hex(01 02 03), hex (25, 29, 43)] with each elementencoded in base 64",
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/byte/invalidnull": {
      "get": {
        "operationId": "array_getByteInvalidNull",
        "description": "Get byte array value [hex(AB, AC, AD), null] with the first item base64 encoded",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "The byte array value [hex(AB, AC, AD), null] with the first item base64 encoded",
            "schema": {
              "description": "The byte array value [hex(AB, AC, AD), null] with the first item base64 encoded",
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/prim/base64url/valid": {
      "get": {
        "operationId": "array_getBase64Url",
        "description": "Get array value ['a string that gets encoded with base64url', 'test string' 'Lorem ipsum'] with the items base64url encoded",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Get array value ['a string that gets encoded with base64url', 'test string' 'Lorem ipsum'] with the items base64url encoded",
            "schema": {
              "description": "Get array value ['a string that gets encoded with base64url', 'test string' 'Lorem ipsum'] with the items base64url encoded",
              "type": "array",
              "items": {
                "type": "string",
                "format": "base64url"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/complex/null": {
      "get": {
        "operationId": "array_getComplexNull",
        "description": "Get array of complex type null value",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "array of complex type with null value",
            "schema": {
              "description": "array of complex type with null value",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product",
                "x-nullable": true
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/complex/empty": {
      "get": {
        "operationId": "array_getComplexEmpty",
        "description": "Get empty array of complex type []",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty array of complex type []",
            "schema": {
              "description": "Empty array of complex type []",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/complex/itemnull": {
      "get": {
        "operationId": "array_getComplexItemNull",
        "description": "Get array of complex type with null item [{'integer': 1 'string': '2'}, null, {'integer': 5, 'string': '6'}]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Array of complex type with null item [{'integer': 1 'string': '2'}, null, {'integer': 5, 'string': '6'}]",
            "schema": {
              "description": "Array of complex type with null item [{'integer': 1 'string': '2'}, null, {'integer': 5, 'string': '6'}]",
              "type": "array",
              "items":
                {
                  "$ref": "#/definitions/Product",
                  "x-nullable": true
                }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/complex/itemempty": {
      "get": {
        "operationId": "array_getComplexItemEmpty",
        "description": "Get array of complex type with empty item [{'integer': 1 'string': '2'}, {}, {'integer': 5, 'string': '6'}]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Array of complex type with empty item [{'integer': 1 'string': '2'}, {}, {'integer': 5, 'string': '6'}]",
            "schema": {
              "description": "Array of complex type with empty item [{'integer': 1 'string': '2'}, {}, {'integer': 5, 'string': '6'}]",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/complex/valid": {
      "get": {
        "operationId": "array_getComplexValid",
        "description": "Get array of complex type with [{'integer': 1 'string': '2'}, {'integer': 3, 'string': '4'}, {'integer': 5, 'string': '6'}]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "array of complex type with [{'integer': 1 'string': '2'}, {'integer': 3, 'string': '4'}, {'integer': 5, 'string': '6'}]",
            "schema": {
              "description": "array of complex type with [{'integer': 1 'string': '2'}, {'integer': 3, 'string': '4'}, {'integer': 5, 'string': '6'}]",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putComplexValid",
        "description": "Put an array of complex type with values [{'integer': 1 'string': '2'}, {'integer': 3, 'string': '4'}, {'integer': 5, 'string': '6'}]",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "array of complex type with [{'integer': 1 'string': '2'}, {'integer': 3, 'string': '4'}, {'integer': 5, 'string': '6'}]",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/array/null": {
      "get": {
        "operationId": "array_getArrayNull",
        "description": "Get a null array",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "null array",
            "schema": {
              "description": "a null array",
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/array/empty": {
      "get": {
        "operationId": "array_getArrayEmpty",
        "description": "Get an empty array []",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "An empty array []",
            "schema": {
              "description": "An empty array []",
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/array/itemnull": {
      "get": {
        "operationId": "array_getArrayItemNull",
        "description": "Get an array of array of strings [['1', '2', '3'], null, ['7', '8', '9']]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "An array of array of strings [['1', '2', '3'], null, ['7', '8', '9']]",
            "schema": {
              "description": "An array of array of strings [['1', '2', '3'], null, ['7', '8', '9']]",
              "type": "array",
              "items": {
                "type": "array",
                "x-nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/array/itemempty": {
      "get": {
        "operationId": "array_getArrayItemEmpty",
        "description": "Get an array of array of strings [['1', '2', '3'], [], ['7', '8', '9']]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "An array of array of strings [['1', '2', '3'], [], ['7', '8', '9']]",
            "schema": {
              "description": "An array of array of strings [['1', '2', '3'], [], ['7', '8', '9']]",
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/array/valid": {
      "get": {
        "operationId": "array_getArrayValid",
        "description": "Get an array of array of strings [['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "An array of array of strings [['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']]",
            "schema": {
              "description": "An array of array of strings [['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']]",
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putArrayValid",
        "description": "Put An array of array of strings [['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']]",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "An array of array of strings [['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']]",
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/dictionary/null": {
      "get": {
        "operationId": "array_getDictionaryNull",
        "description": "Get an array of Dictionaries with value null",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "An array of Dictionaries with value null",
            "schema": {
              "description": "An array of Dictionaries with value null",
              "type": "array",
              "items": {
                "type": "object",
                "x-nullable": true,
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/dictionary/empty": {
      "get": {
        "operationId": "array_getDictionaryEmpty",
        "description": "Get an array of Dictionaries of type <string, string> with value []",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "An array of Dictionaries of type <string, string> with value []",
            "schema": {
              "description": "An array of Dictionaries of type <string, string> with value []",
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/dictionary/itemnull": {
      "get": {
        "operationId": "array_getDictionaryItemNull",
        "description": "Get an array of Dictionaries of type <string, string> with value [{'1': 'one', '2': 'two', '3': 'three'}, null, {'7': 'seven', '8': 'eight', '9': 'nine'}]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "An array of Dictionaries of type <string, string> with value [{'1': 'one', '2': 'two', '3': 'three'}, null, {'7': 'seven', '8': 'eight', '9': 'nine'}]",
            "schema": {
              "description": "An array of Dictionaries of type <string, string> with value [{'1': 'one', '2': 'two', '3': 'three'}, null, {'7': 'seven', '8': 'eight', '9': 'nine'}]",
              "type": "array",
              "items": {
                "type": "object",
                "x-nullable": true,
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/dictionary/itemempty": {
      "get": {
        "operationId": "array_getDictionaryItemEmpty",
        "description": "Get an array of Dictionaries of type <string, string> with value [{'1': 'one', '2': 'two', '3': 'three'}, {}, {'7': 'seven', '8': 'eight', '9': 'nine'}]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "An array of Dictionaries of type <string, string> with value [{'1': 'one', '2': 'two', '3': 'three'}, {}, {'7': 'seven', '8': 'eight', '9': 'nine'}]",
            "schema": {
              "description": "An array of Dictionaries of type <string, string> with value [{'1': 'one', '2': 'two', '3': 'three'}, {}, {'7': 'seven', '8': 'eight', '9': 'nine'}]",
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/array/dictionary/valid": {
      "get": {
        "operationId": "array_getDictionaryValid",
        "description": "Get an array of Dictionaries of type <string, string> with value [{'1': 'one', '2': 'two', '3': 'three'}, {'4': 'four', '5': 'five', '6': 'six'}, {'7': 'seven', '8': 'eight', '9': 'nine'}]",
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "An array of Dictionaries of type <string, string> with value [{'1': 'one', '2': 'two', '3': 'three'}, {'4': 'four', '5': 'five', '6': 'six'}, {'7': 'seven', '8': 'eight', '9': 'nine'}]",
            "schema": {
              "description": "An array of Dictionaries of type <string, string> with value [{'1': 'one', '2': 'two', '3': 'three'}, {'4': 'four', '5': 'five', '6': 'six'}, {'7': 'seven', '8': 'eight', '9': 'nine'}]",
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "array_putDictionaryValid",
        "description": "Get an array of Dictionaries of type <string, string> with value [{'1': 'one', '2': 'two', '3': 'three'}, {'4': 'four', '5': 'five', '6': 'six'}, {'7': 'seven', '8': 'eight', '9': 'nine'}]",
        "parameters": [
          {
            "name": "arrayBody",
            "in": "body",
            "schema": {
              "description": "An array of Dictionaries of type <string, string> with value [{'1': 'one', '2': 'two', '3': 'three'}, {'4': 'four', '5': 'five', '6': 'six'}, {'7': 'seven', '8': 'eight', '9': 'nine'}]",
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Array Operations"
        ],
        "responses": {
          "200": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "properties": {
        "integer": {
          "type": "integer"
        },
        "string": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
